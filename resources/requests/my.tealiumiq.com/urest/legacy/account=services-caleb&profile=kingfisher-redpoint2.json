{"profile_action_type":"SaveAs","lastcustomizeid":"0","history":"[ { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"10\" , \"name\" : \"No Title\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_10\" , \"tab_name\" : \"customizations\"}}]","account":"services-caleb","publish_history":{"201705020809":{"title":"Version - 2017/05/02 08:09","201705020809":{"title":"Version - 2017/05/02 08:09","history":"[ { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"10\" , \"name\" : \"No Title\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_10\" , \"tab_name\" : \"customizations\"}}]","lastcustomizeid":"0","datacloudLinkedProfiles":"{}","linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}","notes":"Add utag_data definition","versionorigin":"201705020808","action":"Published to dev","lastmanageid":"1","status":"dev","operator":"caleb.jaquith@tealium.com","publishedTags":"[ \"1\"]"},"size":"55","status":"dev"},"201701171329":{"title":"Initial publish - 2017/01/17 13:29","201701171329":{"action":"Published to dev","notes":"testing library collisions","versionorigin":"201701171314","publishedTags":"[ ]","operator":"caleb.jaquith@tealium.com","lastmanageid":"1","status":"prod,qa,dev","datacloudLinkedProfiles":"{}","title":"Initial publish - 2017/01/17 13:29","lastcustomizeid":"0","history":"[ { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"3\" , \"name\" : \"TEST : set test_var_source\" , \"type\" : \"100003\" , \"imported\" : \"prod\" , \"library\" : \"lib-test\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_3\" , \"tab_name\" : \"customizations\"}}]","linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}"},"size":"26","status":"qa,prod,dev"},"201701171314":{"title":"Initial publish - 2017/01/17 13:14","201701171314":{"datacloudLinkedProfiles":"{}","title":"Initial publish - 2017/01/17 13:14","history":"[ { \"action\" : \"toggled_tag\" , \"data\" : { \"id\" : \"1\" , \"tag_name\" : \"Tealium Collect\" , \"name\" : \"Tealium Collect\" , \"status\" : \"inactive\" , \"kind\" : \"Tag\" , \"operation\" : \"toggled\" , \"container\" : \"manage_content_148465877204200285\" , \"tab_name\" : \"manage\"}} , { \"action\" : \"added_variable\" , \"data\" : { \"id\" : \"4\" , \"name\" : \"test_var_source\" , \"type\" : \"js\" , \"library\" : \"\" , \"kind\" : \"Variable\" , \"operation\" : \"added\" , \"container\" : \"defineObjectsList\" , \"tab_name\" : \"define\"}} , { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"1\" , \"name\" : \"No Title\" , \"type\" : \"100003\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_1\" , \"tab_name\" : \"customizations\"}}]","lastcustomizeid":"0","linkedProfiles":"{ }","action":"Published to dev","versionorigin":"201701121453","notes":"test_source_var","operator":"caleb.jaquith@tealium.com","publishedTags":"[ ]","lastmanageid":"1","status":"prod,qa,dev"},"status":"Not Published","size":"26"},"201701241525":{"status":"Not Published","size":"38","201701241525":{"status":"dev","lastmanageid":"1","publishedTags":"[ \"1\"]","operator":"caleb.jaquith@tealium.com","versionorigin":"201701171329","notes":"Testing Dev publish of collect","action":"Published to dev","linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}","lastcustomizeid":"0","title":"Version 2017.01.24.1524","history":"[ { \"action\" : \"toggled_tag\" , \"data\" : { \"id\" : \"1\" , \"tag_name\" : \"Tealium Collect\" , \"name\" : \"Tealium Collect\" , \"status\" : \"active\" , \"kind\" : \"Tag\" , \"operation\" : \"toggled\" , \"container\" : \"manage_content_148527147239300004\" , \"tab_name\" : \"manage\"}} , { \"action\" : \"updated_tag\" , \"data\" : { \"id\" : \"1\" , \"tag_name\" : \"Tealium Collect\" , \"name\" : \"Tealium Collect\" , \"kind\" : \"Tag\" , \"operation\" : \"updated\" , \"container\" : \"manage_content_148527147239300004\" , \"tab_name\" : \"manage\"}}]","datacloudLinkedProfiles":"{}"},"title":"Version 2017.01.24.1524"},"201704241314":{"title":"Version - 2017/04/24 13:14","201704241314":{"linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}","datacloudLinkedProfiles":"{}","history":"[ { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"4\" , \"name\" : \"Convert GTM data layer\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_4\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"5\" , \"name\" : \"Merge in basket data\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_5\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"6\" , \"name\" : \"COLLECT : If basket page, wait until prodSku is present in Data Layer\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_6\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"7\" , \"name\" : \"FIX : All prodXXX values to arrays\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_7\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"added_variable\" , \"data\" : { \"id\" : \"5\" , \"name\" : \"basicPageId\" , \"type\" : \"js\" , \"library\" : \"\" , \"kind\" : \"Variable\" , \"operation\" : \"added\" , \"container\" : \"defineObjectsList\" , \"tab_name\" : \"define\"}}]","title":"Version - 2017/04/24 13:14","lastcustomizeid":"0","publishedTags":"[ \"1\"]","operator":"caleb.jaquith@tealium.com","status":"dev","lastmanageid":"1","action":"Published to dev","notes":"Push dataLayer parsing","versionorigin":"201701241525"},"size":"53","status":"Not Published"},"201705020808":{"status":"Not Published","201705020808":{"lastcustomizeid":"0","title":"Version - 2017/05/02 08:08","history":"[ { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"8\" , \"name\" : \"No Title\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_8\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"added_extension\" , \"data\" : { \"id\" : \"9\" , \"name\" : \"No Title\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"added\" , \"container\" : \"customizations_9\" , \"tab_name\" : \"customizations\"}}]","datacloudLinkedProfiles":"{}","linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}","versionorigin":"201704241314","notes":"Add echo functionality","action":"Published to dev","status":"dev","lastmanageid":"1","publishedTags":"[ \"1\"]","operator":"caleb.jaquith@tealium.com"},"size":"55","title":"Version - 2017/05/02 08:08"},"201701121453":{"title":"Initial publish","201701121453":{"linkedProfiles":"{ }","datacloudLinkedProfiles":"{}","title":"Initial publish","history":"","lastcustomizeid":"","operator":"caleb.jaquith@tealium.com","publishedTags":"[ \"1\"]","status":"prod,qa,dev","lastmanageid":"","action":"Published to dev","versionorigin":"","notes":"Initial publish on profile creation"},"size":"38","status":"Not Published"}},"profile":"kingfisher-redpoint2","linkedProfiles":"{ \"lib-test\" : { \"rev\" : \"201701171324\" , \"env\" : \"Prod\"}}","label_relationships":null,"publish":{"smartFTP":{"qa":"true","prod":"true","dev":"true"},"minify":"yes","enable_utf8_encoding":"yes"},"revision":"201705020808","importable_library":"NONE","test":{},"lastmanageid":"1","datacloudLinkedProfiles":"{}","email":"caleb.jaquith@tealium.com","title":"Version - 2017/05/02 08:09","customizations":{"1":{"148465882163900286_settotext":"profile","title":"TEST : set test_var_source","148465882163900286_set":"js.test_var_source","type":"new","id":"100003","148465882163900286_setoption":"text","scope":"global","status":"active","_id":"1","148465882163900286_settovar":"","advExecOption":"alr","sort":"3","notes":"","labels":""},"3":{"148465882163900286_settotext":"library","type":"new","148465882163900286_setoption":"text","_id":"3","sort":"2","notes":"","imported":"prod","id":"100003","title":"TEST : set test_var_source","148465882163900286_set":"js.test_var_source","advExecOption":"alr","scope":"global","status":"active","148465882163900286_settovar":"","labels":"","settings":{"lastdefineid":"4","profileid":"lib-test","account":"services-caleb","lastcustomizeid":"0","lastloadruleid":"1","revision":"201701171324","creation":"201701171317","lastmanageid":"0","origin_id":"1","library":"optional","minorrevision":"201701171324"}},"4":{"_ignoreError":"false","title":"Convert GTM data layer","id":"100036","type":"new","status":"active","_id":"4","scope":"global","advExecOption":"blr","notes":"","code":"/****************************************************************************  \n *  Version 1.3 - 20150825\n *\n *  Please read ALL instructions before using this so you know exactly what\n *  you are doing and how to properly use this code!\n ***************************************************************************/\n\ntry {\n    window.utag_data = window.utag_data || &quot;&quot;;\n    window.tealium = window.tealium || {};\n    tealium.com = tealium.com || {};\n    tealium.com.cfg = tealium.com.cfg || {};\n    tealium.com.tealium_w3c = {};\n    tealium.com.tealium_w3c.udo = {};\n\n    // change the &quot;digitalData&quot; to the object you wish to convert. This can\n    // include any global nested object with any name\n    tealium.com.cfg.objectToConvert = dataLayer[0];\n\n    // Configurable option to standardize the keynames in the converted object\n    // Default: true\n    tealium.com.cfg.varChange = false;\n\n    /*\n     * Change these mappings to convert items in the raw converted layer\n     * to readable data variables. The items on the left will be a &quot;contains&quot;\n     * where the matched key contains that value. An optional flag (mentioned\n     * later) can be enabled to enforce a strict, exact match.  The items on\n     * the right are what they will be changed to.\n     *\n     * For example, if you have 2 keys named &quot;my-current-data_source&quot; and\n     * &quot;some-other-data_source&quot; which should both be put into the variable\n     * called &quot;sample_source&quot;, the below item might look like\n     *   [&quot;data_source&quot;, &quot;sample_source&quot;]\n     * This method is the &quot;contains&quot; type of flag that may be necessary as\n     * the digitalData spec may have the same information nested under\n     * different objects depending on the page you are on. In the case where\n     * the match may have commonly named keys, but contains different\n     * information, you'll need to explicitly write the whole name of the \n     * key so data doesn't get overwritten. You can also specify a flag on\n     * the mapping function call at the bottom of the script to enforce a\n     * strict match.\n     *\n     * IMPORTANT NOTE:\n     * To see the object before it is converted to find out available keys,\n     * comment out the mentioned line at the bottom of this script. Then, \n     * enter the following into the console to see the output:\n     *   tealium.com.tealium_w3c.udo\n     *\n     * IMPORTANT NOTE #2:\n     * These are order specific and will run from top to bottom. Once a key\n     * is matched, it is removed from the temporary storage as to not be\n     * looked at again. So, if I want to do a match for &quot;shipping&quot;, but my\n     * original object had both &quot;shipping&quot; and &quot;shippingMethod&quot;, my items\n     * below would prefer the longer &quot;shippingMethod&quot;:\n     *   [&quot;shippingMethod&quot;, &quot;order_shipping_type&quot;],\n     *   [&quot;shipping&quot;, &quot;order_shipping&quot;]\n     *\n     * IMPORTANT NOTE #3:\n     * This converter will NOT work for data elements that are nested arrays\n     * (e.g. [['something'],['something else']]). If you have nested arrays \n     * in your data layer that need to stay intact for tracking, you can \n     * directly reference them via a js_page data element \n     * (e.g. digitalData.page.pageInfo.myNestedArray).\n     */\n    tealium.com.mapping_keys = [\n        [&quot;vatPriceDisplay&quot;, &quot;basicVatPriceDisplay&quot;],\n        [&quot;customerBrand&quot;, &quot;basicCustomerBrand&quot;],\n        [&quot;storeName&quot;, &quot;basicStoreSelected&quot;],\n        [&quot;loggedIn&quot;, &quot;basicLoggedIn&quot;],\n        [&quot;pageId&quot;, &quot;basicPageId&quot;],\n        [&quot;urlDestination&quot;, &quot;basicUrlDestination&quot;],\n        [&quot;urlReferral&quot;, &quot;basicUrlReferral&quot;],\n        [&quot;urlPath&quot;, &quot;basicUrlPath&quot;],\n        [&quot;categoryId&quot;, &quot;categoryIdPage&quot;],\n        [&quot;category&quot;, &quot;categoryName&quot;],\n        [&quot;parentCategoryId&quot;, &quot;categoryParentID&quot;],\n        [&quot;city&quot;, &quot;userCity&quot;],\n        [&quot;state&quot;, &quot;userState&quot;],\n        [&quot;country&quot;, &quot;userCountry&quot;],\n        [&quot;profession&quot;, &quot;userProfession&quot;],\n        [&quot;industry&quot;, &quot;userIndustry&quot;],\n        [&quot;company&quot;, &quot;userCompany&quot;],\n        [&quot;gasSafeRegistered&quot;, &quot;userGasSafeRegistered&quot;],\n        [&quot;customerId&quot;, &quot;userId&quot;],\n        [&quot;email&quot;, &quot;userEmail&quot;],\n        [&quot;zipCode&quot;, &quot;userPostCodeFull&quot;],\n        [&quot;listerResultName&quot;, &quot;listerResultName&quot;],\n        [&quot;listerSortBy&quot;, &quot;listerSortBy&quot;],\n        [&quot;listerPage&quot;, &quot;listerPage&quot;],\n        [&quot;listerShowResults&quot;, &quot;listerShowResults&quot;],\n        [&quot;facetLastRefinementValue&quot;, &quot;facetLastRefinementValue&quot;],\n        [&quot;facetLastRefinement&quot;, &quot;facetLastRefinement&quot;],\n        [&quot;facetRefinementTrail&quot;, &quot;facetRefinementTrail&quot;],\n        [&quot;facetNumberRefinements&quot;, &quot;facetNumberRefinements&quot;],\n        [&quot;searchCount&quot;, &quot;searchCount&quot;],\n        [&quot;searchTerm&quot;, &quot;searchTerm&quot;],\n        [&quot;searchType&quot;, &quot;searchType&quot;],\n        [&quot;listerResultNameCompare&quot;, &quot;listerResultNameCompare&quot;],\n        [&quot;sku&quot;, &quot;prodSku&quot;],\n        [&quot;name&quot;, &quot;prodName&quot;],\n        [&quot;category&quot;, &quot;prodCategory&quot;],\n        [&quot;price&quot;, &quot;prodPrice&quot;],\n        [&quot;categoryID&quot;, &quot;prodCategoryID&quot;],\n        [&quot;quantity&quot;, &quot;prodQuantity&quot;],\n        [&quot;skuAvailabilityDelivery&quot;, &quot;prodSkuAvailabilityDelivery&quot;],\n        [&quot;skuAvailabilityCollection&quot;, &quot;prodSkuAvailabilityCollection&quot;],\n        [&quot;numberBullets&quot;, &quot;prodNumberBullets&quot;],\n        [&quot;gasSafe&quot;, &quot;prodGasSafe&quot;],\n        [&quot;fulfillmentType&quot;, &quot;prodFulfillmentType&quot;],\n        [&quot;skuDiscount&quot;, &quot;prodSkuDiscount&quot;],\n        [&quot;skuWasPrice&quot;, &quot;prodSkuWasPrice&quot;],\n        [&quot;skuSavePound&quot;, &quot;prodSkuSavePound&quot;],\n        [&quot;skuSavePercent&quot;, &quot;prodSkuSavePercent&quot;],\n        [&quot;transactionId&quot;, &quot;transactionID&quot;],\n        [&quot;transactionCollectTodayTotal&quot;, &quot;transactionCollectTodayTotal&quot;],\n        [&quot;transactionCollectNdTotal&quot;, &quot;transactionCollectNdTotal&quot;],\n        [&quot;transactionDeliveryTotal&quot;, &quot;transactionDeliveryTotal&quot;],\n        [&quot;transactionTotal&quot;, &quot;transactionTotal&quot;],\n        [&quot;transactionTotalDiscount&quot;, &quot;transactionTotalDiscount&quot;],\n        [&quot;transactionShipping&quot;, &quot;transactionShipping&quot;],\n        [&quot;transactionTax&quot;, &quot;transactionTax&quot;],\n        [&quot;paymentType&quot;, &quot;transactionPaymentType&quot;],\n        [&quot;discountNameOrder&quot;, &quot;transactionDiscountNameOrder&quot;],\n        [&quot;discountCodeOrder&quot;, &quot;transactionDiscountCodeOrder&quot;],\n        [&quot;fulfillmentType&quot;, &quot;transactionFullfilmentType&quot;],\n        [&quot;discountNameDelivery&quot;, &quot;transactionDiscountNameDelivery&quot;],\n        [&quot;discountCodeDelivery&quot;, &quot;transactionCodeDeliver&quot;],\n        [&quot;discountNameProduct&quot;, &quot;transactionDiscountNameProduct&quot;],\n        [&quot;discountCodeProduct&quot;, &quot;transactionDiscountCodeProduct&quot;],\n        [&quot;storeDistance&quot;, &quot;storeDistance&quot;],\n        [&quot;storeNameNearest&quot;, &quot;storeNameNearest&quot;],\n        [&quot;storeSearchTerm&quot;, &quot;storeSearchTerm&quot;]\n    ];\n\n    /****************************************** DO NOT ALTER THIS SECTION ********************************************/\n\n    //util: define isArray prototype if doesn't exist\n    if(!Array.isArray) {\n        Array.isArray = function (vArg) {\n            return Object.prototype.toString.call(vArg) === &quot;[object Array]&quot;;\n        };\n    }\n\n    tealium.com.extend = function(){\n        /*\n         * utility function\n         * This function merges objects into the first given object.\n         * usage: tealium.com.extend({},obj1,[obj2,...])\n         * @return first object given\n         */\n        for(var i=1; i&lt;arguments.length; i++)\n            for(var key in arguments[i])\n                if(arguments[i].hasOwnProperty(key))\n                    arguments[0][key] = arguments[i][key];\n        return arguments[0];\n    }\n\n    tealium.com.cleanArrayOfObjects = function(invar) {\n        /*\n         * utility function\n         * This function takes an input and merges it into a single\n         * object. This is useful for cases like the Google Tag Manager\n         * dataLayer object that can have an array ob multiple objects.\n         * @param invar: variable to convert\n         * @return the converted variable\n         */\n        var newObj = {};\n        if(Array.isArray(invar)) {\n            for(var i=0;i&lt;invar.length;i++) {\n                if(typeof invar[i] == &quot;object&quot;)\n                    tealium.com.extend(newObj,invar[i])\n                else\n                    newObj[&quot;key&quot;+i] = invar[i];\n            }\n            return newObj;\n        }\n        return invar;\n    }\n\n    tealium.com.convert_mapping_keys = function (obj, strictMatch) {\n        /*\n         * This function takes an object and changes matching\n         * key names found in the tealium.com.mapping_keys object\n         * @param obj: object to update all keys in\n         * @param strictMatch: an optional boolean flag to say if\n         *     this should be an &quot;exact match&quot; vs &quot;contains&quot; lookup\n         */\n         strictMatch = strictMatch || false;\n\n        for (var idx in obj) {\n            var val = obj[idx];\n            var temp = &quot;&quot;;\n            if (Array.isArray(val)) temp = obj[idx].slice(0);\n            else if (typeof val == &quot;object&quot;) {\n                temp = {};\n                for (k in val) temp[k] = val[k];\n            }\n            else temp = obj[idx];\n            delete obj[idx];\n\n            var newIdx = false;\n            for (var key in tealium.com.mapping_keys) {\n                var currentMapping = tealium.com.mapping_keys[key];\n                if(!currentMapping[0]) continue;\n                if (   (strictMatch === true &amp;&amp; idx === currentMapping[0])\n                    || (strictMatch === false &amp;&amp; idx.indexOf(currentMapping[0]) &gt; -1)) {\n                    newIdx = currentMapping[1];\n                    break;\n                }\n            }\n            if (!newIdx) newIdx = idx;\n            obj[newIdx] = temp;\n        }\n    };\n\n    function varChange(obj) {\n        /*\n         * This function converts camelCase items to all lowercase\n         * like so: camel_case. This keeps things on a standardized\n         * level.\n         * @param obj: object to update all keys in\n         */\n\n        for (var idx in obj) {\n            var val = obj[idx];\n            var temp = &quot;&quot;;\n            if (Array.isArray(val)) temp = obj[idx].slice(0);\n            else if (typeof val == &quot;object&quot;) {\n                temp = {};\n                for (k in val)\n                    temp[k] = val[k];\n            }\n            else temp = obj[idx];\n            delete obj[idx];\n            var newIdx = idx.replace(/([a-z][A-Z])/g, function(a) {\n                return a[0] + '_' + a[1];\n            }).toLowerCase();\n            obj[newIdx] = temp;\n        }\n    }\n\n    tealium.com.convert_data_layer = function (data) {\n        /*\n         * This is the meat of converting the data layer. It houses\n         * several different functions for use in converting a given\n         * data layer object.\n         * @param data: the original object that we want to convert\n         */\n\n        var delim = &quot;-&quot;;\n        var result = {};\n\n        function recurse(cur, prop) {\n            /*\n             * This function will completely flatten a nested object\n             * which can then be manipulated in a reverse manner. The\n             * result will go into the above &quot;result&quot; object.\n             * @param cur: current level object we are looking at\n             * @param prop: current object element property\n             */\n            if (Object(cur) !== cur) result[prop] = cur;\n            else if (Array.isArray(cur)) {\n                for (var i = 0, l = cur.length; i &lt; l; i++) recurse(cur[i], prop + &quot;[&quot; + i + &quot;]&quot;);\n                if (l == 0) result[prop] = [];\n            }\n            else {\n                var isEmpty = true;\n                for (var p in cur) {\n                    isEmpty = false;\n                    recurse(cur[p], prop ? prop + delim + p : p);\n                }\n                if (isEmpty &amp;&amp; prop) result[prop] = {};\n            }\n        }\n\n        function findLikeItems(arr, obj) {\n            /*\n             * This function will take a given element name and loop through\n             * the given object. If there are any like array items, this will\n             * combine them into a single array, then remove the old ones from\n             * the original object.\n             * @param arr: an array with details about the current property:\n             *      arr[0]: the property prefix before the array identifier &quot;[&quot;\n             *      arr[1]: the full property name\n             *      arr[2]: the value assigned to this property\n             * @param obj: the object to loop through and find like properties\n             */\n            var newObj = {};\n            var currFull = arr[1];                                    //full variable name (key)\n            var currFront = currFull.slice(0, currFull.indexOf(&quot;[&quot;)); //prefix before array identifier\n            var val = arr[2];                                         //value of key,val pair\n            var currIdx = 0;\n            for (var r in obj) {\n                if (r.indexOf(currFront) == 0) {\n                    var currBack = r.split(']' + delim)[1];\n                    newObj[currBack] = newObj[currBack] || [];\n                    newObj[currBack].push(obj[r]);\n                    delete obj[r];\n                }\n            }\n            return newObj;\n        }\n\n        //checks each item in the given object\n        function checkItem(obj) {\n            /*\n             * This function will check to see if a given property should\n             * be grouped by arrays. It will either run the findLikeItems\n             * function or will directly copy the property to our new\n             * output object.\n             * @param obj: the object we are looking to check for arrays\n             * @output newResult: the new object that is grouped as needed\n             */\n\n            var checkAgain = false;\n            var newResult = {};\n            for (var i in obj) {\n                var workingSet = [];\n                var terms = i.split(delim);\n                var hasArr = false;\n                //look for an array identifier\n                if (i.indexOf('[') &gt; -1) {\n                    hasArr = true;\n                    checkAgain = true;\n                }\n                //not an array item, just put into our new object\n                if (!hasArr) newResult[i] = obj[i];\n                else {\n                    //it was an array, we'll handle it by going backwards (if nested arr)\n                    var lastArrIdx = i.lastIndexOf('[');\n                    workingSet = [ i.substr(0, lastArrIdx + 2), i, obj[i] ];\n                    var newObj = findLikeItems(workingSet, obj);\n                    for (var n in newObj) newResult[n] = newObj[n];\n                }\n            }\n            //an array was found, recheck the obj in case of nested arrays\n            if (checkAgain) checkItem(newResult); //objects pass by pointer, no need to assign to a variable\n            return newResult;\n        }\n\n        recurse(data, &quot;&quot;);          //flatten the object\n        if (tealium.com.cfg.varChange) {\n            varChange(result);          //standardize the variables\n        }\n        return checkItem(result);   //return the converted object with grouped arrays\n    }\n    //if the initial variable is an array (e.g. GTM dataLayer), then convert to be an object\n    tealium.com.cfg.objectToConvert = tealium.com.cleanArrayOfObjects(tealium.com.cfg.objectToConvert);\n    //convert the object to be our flattened object\n    tealium.com.tealium_w3c.udo = tealium.com.convert_data_layer(tealium.com.cfg.objectToConvert);\n\n    /**************************************** END OF DO NOT ALTER SECTION ******************************************/\n\n\n    //Comment the following line to discover raw keys to use for your own mappings.\n    //You may view the raw data to be mapped by running this script (after commenting\n    //out below) and then typing tealium.com.tealium_w3c.udo into the console. Once \n    //you have your raw variables, you can enable this to perform the mappings based\n    //on the mapping keys at the start of this script.\n    tealium.com.convert_mapping_keys(tealium.com.tealium_w3c.udo, true);\n\n    //Comment this following line (if statement) if you'd like to use the converted\n    //result even if utag_data already exists on the page. Typically, this extension\n    //is used when utag_data does not exist on the page, so modifying below is needed\n    //if it is defined on the page already.\n  window.utag_data = tealium.com.tealium_w3c.udo;\n  utag.ut.merge(utag.data, utag_data);\n  window.utag_data = utag.data;\n\n} catch (e) {\n    utag.DB(&quot;Error in converting data layer: &quot;, e);\n}","scopevars":"","sort":"5","labels":""},"5":{"advExecOption":"blr","status":"active","_id":"5","scope":"global","labels":"","scopevars":"","code":"// Scope       : All Tags\n// Execution   : Before Load Rules\n// Condition   : (none)\n// Description : Check for basketed product info from dataLayer on basket page.\n\n\nfunction extend() {\n  // works like jQuery.extend without the dependency (jQuery doesn't reliably load in time)\n  for (var i = 1; i &lt; arguments.length; i++)\n    for (var key in arguments[i])\n      if (arguments[i].hasOwnProperty(key)) {\n        if (typeof arguments[0][key] === 'object' &amp;&amp;\n          typeof arguments[i][key] === 'object')\n          extend(arguments[0][key], arguments[i][key]);\n        else\n          arguments[0][key] = arguments[i][key];\n      }\n  return arguments[0];\n}\n\nfunction mergeBasketData() {\n  // gets missing product information on basket pages\n  if (typeof b.basicPageId !== &quot;undefined&quot; &amp;&amp; b.basicPageId === &quot;basket&quot;) {\n    if (typeof dataLayer !== &quot;undefined&quot; &amp;&amp; typeof dataLayer[1] !== &quot;undefined&quot;) {\n      var basketData = tealium.com.convert_data_layer(dataLayer[1]);\n      tealium.com.convert_mapping_keys(basketData, true);\n      window.utag_data = extend({}, window.utag_data, basketData);\n    }\n  }\n  return true;\n}\n\nmergeBasketData();\n","notes":"utag_data  ","sort":"6","_ignoreError":"false","id":"100036","type":"new","title":"Merge in basket data"},"6":{"advExecOption":"alr","status":"active","_id":"6","scope":"1","labels":"","code":"// Scope       : Tealium Collect\n// Execution   : n/a\n// Condition   : (none)\n// Description : Recheck dataLayer for basketed product information up to 5 times if missing.\n//               Record the number of attempts for EventStore verification.\n\n\n// number of attempts so far, add to the b object to send to AS as a double-check\nutag_data.basketSkuTries = utag_data.basketSkuTries || 0;\nb.basketSkuTries = utag_data.basketSkuTries;\n\n// should match the tag scope, must be an array\nvar collect_tag_ids = [1];\n\nif ((typeof b['basicPageId'] != 'undefined' &amp;&amp;\n        b['basicPageId'].toString().toLowerCase().indexOf('basket'.toLowerCase()) &gt; -1 &amp;&amp;\n        typeof b['prodSku'] == 'undefined' &amp;&amp; utag_data.basketSkuTries &lt; 5)) {\n\n    utag_data.basketSkuTries++;\n    var utag_view_collect_call = function () {\n      utag.view(utag.data, null, collect_tag_ids)\n    };\n    setTimeout(utag_view_collect_call, 300);\n    return false;\n}\n","scopevars":"","notes":"utag_data and b","sort":"7","_ignoreError":"false","type":"new","id":"100036","title":"COLLECT : If basket page, wait until prodSku is present in Data Layer"},"7":{"title":"FIX : All prodXXX values to arrays","149270104704000757_149270105497500758_filtertype":"equals","id":"100036","_ignoreError":"false","149270104704000757_149270105497500758_filter":"product page","code":"// Scope       : All Tags\n// Execution   : Before Load Rules\n// Condition   : basicPageId is defined &amp;&amp; basicPageId equals 'product page'\n// Description : Make sure product values are correctly defined as arrays instead of single values.\n\n// fallback in case scope is changed\nvar b = b || utag.data;\n\n// Go through all the attributes in the b object, checking\n// for attributes that start with 'prod' followed by a capital letter.\n//\n// If the value isn't an object/array already, redefine it as a single-element array.\nfor (key in b) {\n  if (/^prod[A-Z]*/.test(key) &amp;&amp; (typeof b[key]) != &quot;object&quot;) {\n    // turn the key into a single-element array\n    b[key] = [b[key]];\n  }\n}\n","149270104704000757_source":"js.basicPageId","labels":"","scope":"global","149270104704000757_filter":"","status":"active","advExecOption":"blr","149270104704000757_149270105497500758_source":"js.basicPageId","type":"new","sort":"1","notes":"","scopevars":"","_id":"7","149270104704000757_filtertype":"defined"},"8":{"sort":"0","code":"/**\n* Test automation hook to render data layer to the\n* html page\n*\n* author: fiann@tealium.com\n*/\n\n// Only execute on test site\nif (/dev|qa/.test(utag.cfg.path)) {\n  \n  // Start a counter for div IDs\n  window.tealiumViewID = 0;\n  \n  // Render all the data to a div on the page\n  var html = &quot;&lt;div id=\\&quot;utagview-&quot; + window.tealiumViewID + &quot;\\&quot;&gt;&lt;ul&gt;&quot;;\n  \n  // 'utag.data' is a reference to the data object\n  for (var key in utag.data) {\n    var value = utag.data[key];\n    html = html + &quot;&lt;li id='&quot; + key + &quot;'&gt;&quot; + value + &quot;&lt;/li&gt;&quot;;\n  }\n  \n  html = html + &quot;&lt;/ul&gt;&lt;/div&gt;&quot;;\n  \n  // can't use jQuery on all pages\n  var container = document.createElement(&quot;div&quot;);\n  container.setAttribute(&quot;id&quot;, &quot;tealium_data&quot;);\n  container.setAttribute(&quot;style&quot;, &quot;display: block;line-height:0;width:0;height:0;overflow:hidden;&quot;);\n  container.innerHTML = html;\n  document.getElementsByTagName(&quot;body&quot;)[0].appendChild(container);\n}","notes":"","scopevars":"","advExecOption":"alr","scope":"domready","_id":"8","status":"active","id":"100036","type":"new","title":"DEBUG : Add test data to page for test automation","_ignoreError":"false"},"9":{"_ignoreError":"false","type":"new","id":"100036","title":"DEBUG : Add event data to page for test automation","advExecOption":"alr","scope":"global","_id":"9","status":"active","sort":"4","code":"/**\n* Add event data to debug/echo function\n*\n* author: ian@tealium.com\n*/\n\nif (a === &quot;link&quot; || (a === &quot;view&quot; &amp;&amp; typeof window.tealiumRunOnce !== &quot;undefined&quot;)) {\n  // ID of existing contain set by DOM Ready extension\n  var divId = &quot;tealium_data&quot;;\n  \n  // Only execute on test site and if existing div exists\n  if ((! /dev|qa/.test(utag.cfg.path) || (! document.getElementById(divId)))) {\n    return;\n      }\n  \n  if (a === &quot;view&quot;) {\n    // Increment counter\n    window.tealiumViewID = window.tealiumViewID + 1;\n    \n    // Render all the data to a div on the page\n    var html = &quot;&lt;div id=\\&quot;utagview-&quot; + window.tealiumViewID + &quot;\\&quot;&gt;&lt;ul&gt;&quot;;\n  }\n  else if (a === &quot;link&quot;) {\n    // Increment counter\n    if (typeof window.tealiumLinkID == &quot;undefined&quot;) {\n     window.tealiumLinkID = 0; \n    }\n    else {\n      window.tealiumLinkID = window.tealiumLinkID + 1;\n    }\n    \n    // Render all the data to a div on the page\n    var html = &quot;&lt;div id=\\&quot;utaglink-&quot; + window.tealiumLinkID + &quot;\\&quot;&gt;&lt;ul&gt;&quot;;\n  }\n  // 'utag.data' is a reference to the data object\n  for (var key in b) {\n    var value = b[key];\n    html = html + &quot;&lt;li id='&quot; + key + &quot;'&gt;&quot; + value + &quot;&lt;/li&gt;&quot;;\n  }\n  \n  html = html + &quot;&lt;/ul&gt;&lt;/div&gt;&quot;;\n  \n  // Replace div contents with event data\n  document.getElementById(divId).innerHTML = document.getElementById(divId).innerHTML + html;\n  \n}\nwindow.tealiumRunOnce = true;","scopevars":"","notes":""},"10":{"sort":"8","code":"window.utag_data = window.utag_data || {};","notes":"","scopevars":"","scope":"preload","status":"active","_id":"10","advExecOption":"alr","title":"Define utag_data","id":"100036","type":"new","_ignoreError":"false"}},"createManifest":"false","versionorigin":"201705020808","settings":{"lastdefineid":"5","lastcustomizeid":"0","profileid":"kingfisher-redpoint2","account":"services-caleb","revision":"201705020809","creation":"201701121453","lastloadruleid":"1","lastmanageid":"1","minorrevision":"201705020809","library":"NONE"},"manage":{"1":{"id":"1","config_profile":"","title":"Tealium Collect","advconfig_loadtype":"","loadrule":"all","tag_name":"Tealium Collect","config_sampling":"100","advconfig_wait":"yes","advconfig_bundle":"no","labels":"","advconfig_s2s":"no","config_server":"","advconfig_optout":"yes","config_enrichment":"frequent","status":"active","scope":"all","config_region":"default","advconfig_src":"","publishedTargets":"dev","advconfig_send":"yes","selectedTargets":{"prod":"true","dev":"true","qa":"true"},"notes":"","sort":"0","new_flag":"true","publish_revisions":{"svr_save_timestamps":{"prod":"201701171314","dev":"201704241314","qa":"201701171314"},"last_modified":"201704241314"},"tag_id":"20064","_id":"1"}},"define":{"1":{"_id":"1","title":"","description":"","name":"product_id","type":"js","labels":""},"2":{"_id":"2","title":"","description":"","name":"event_type","type":"js","labels":""},"3":{"title":"","description":"","name":"page_type","labels":"","type":"js","_id":"3"},"4":{"name":"test_var_source","labels":"","type":"js","title":"","description":"","_id":"4"},"5":{"description":"","title":"","labels":"","type":"js","name":"basicPageId","_id":"5"},"6":{"_id":"6","name":"Account Value Strings","type":"va","description":"Should contain account numbers and their value band","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5217","origin_name":"Account Value Strings","origin_type":"property_lists","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"7":{"_id":"7","name":"Active browser type","type":"va","description":"The browser actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"44","origin_name":"Active browser type","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"8":{"_id":"8","name":"Active browser version","type":"va","description":"The browser version actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"48","origin_name":"Active browser version","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"9":{"_id":"9","name":"Active device","type":"va","description":"The device actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"46","origin_name":"Active device","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"10":{"_id":"10","name":"Active operating system","type":"va","description":"The operating system actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"45","origin_name":"Active operating system","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"11":{"_id":"11","name":"Active platform","type":"va","description":"The platform actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"47","origin_name":"Active platform","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"12":{"_id":"12","name":"Average visit duration in minutes","type":"va","description":"Average visit duration in minutes","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"26","origin_name":"Average visit duration in minutes","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"13":{"_id":"13","name":"Average visits per week","type":"va","description":"Average visits per week","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"29","origin_name":"Average visits per week","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"14":{"_id":"14","name":"Batch Tester","type":"va","description":"Testing the batch webhook","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5189","origin_name":"Batch Tester","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"15":{"_id":"15","name":"Blue","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5067","origin_name":"Blue","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"16":{"_id":"16","name":"Brown","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5055","origin_name":"Brown","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"17":{"_id":"17","name":"Cookie Sync ID - Assigned Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5075","origin_name":"Cookie Sync ID - Assigned Rule","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"18":{"_id":"18","name":"Cookie Sync ID - No Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5079","origin_name":"Cookie Sync ID - No Rule","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"19":{"_id":"19","name":"Counter (Last Seen)","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5193","origin_name":"Counter (Last Seen)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"20":{"_id":"20","name":"Direct visit","type":"va","description":"The user navigated directly to the site","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"14","origin_name":"Direct visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"21":{"_id":"21","name":"Entry URL","type":"va","description":"URL of the first page visited","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5","origin_name":"Entry URL","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"22":{"_id":"22","name":"Event count","type":"va","description":"Total number of events in visit","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"7","origin_name":"Event count","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"23":{"_id":"23","name":"Exit URL","type":"va","description":"URL of the last page visited","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"6","origin_name":"Exit URL","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"24":{"_id":"24","name":"Fan","type":"va","description":"More than two total visits and more direct visits than refers","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"30","origin_name":"Fan","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"25":{"_id":"25","name":"First 'test_value' only","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5183","origin_name":"First 'test_value' only","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"26":{"_id":"26","name":"First visit","type":"va","description":"Date of first visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"23","origin_name":"First visit","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"27":{"_id":"27","name":"Frequent visitor","type":"va","description":"Two or more average visits per week","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"31","origin_name":"Frequent visitor","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"28":{"_id":"28","name":"Full entry URL (with attribution)","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5090","origin_name":"Full entry URL (with attribution)","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"29":{"_id":"29","name":"Google GID","type":"va","description":"From the Google Cookie Match, saved here as string ","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5038","origin_name":"Google GID","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"30":{"_id":"30","name":"Green","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5063","origin_name":"Green","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"31":{"_id":"31","name":"GUID - Compromised Profile","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5179","origin_name":"GUID - Compromised Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"32":{"_id":"32","name":"GUID - Compromised profile and a new visit [bln]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5340","origin_name":"GUID - Compromised profile and a new visit [bln]","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"33":{"_id":"33","name":"GUID - Count Has Changed This Visit","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5332","origin_name":"GUID - Count Has Changed This Visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"34":{"_id":"34","name":"GUID - Count of seen [num]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5175","origin_name":"GUID - Count of seen [num]","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"35":{"_id":"35","name":"GUID - Healthy Profile","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5177","origin_name":"GUID - Healthy Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"36":{"_id":"36","name":"GUID - Incomplete Profile","type":"va","description":"Should not use this profile, it's been used on a shared device and only contains partial information","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5334","origin_name":"GUID - Incomplete Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"37":{"_id":"37","name":"GUID - Last seen [str]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5169","origin_name":"GUID - Last seen [str]","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"38":{"_id":"38","name":"GUID - None","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5181","origin_name":"GUID - None","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"39":{"_id":"39","name":"Has Cookie Sync ID - With Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5077","origin_name":"Has Cookie Sync ID - With Rule","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"40":{"_id":"40","name":"Has Cookie Sync ID - Without Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5081","origin_name":"Has Cookie Sync ID - Without Rule","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"41":{"_id":"41","name":"Hyphen Lover","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5088","origin_name":"Hyphen Lover","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"42":{"_id":"42","name":"Import - Age","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5165","origin_name":"Import - Age","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"43":{"_id":"43","name":"Import - Alpha","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5161","origin_name":"Import - Alpha","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"44":{"_id":"44","name":"Import - Bool","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5167","origin_name":"Import - Bool","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"45":{"_id":"45","name":"Import - Row Number","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5163","origin_name":"Import - Row Number","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"46":{"_id":"46","name":"Last 'test_value'","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5187","origin_name":"Last 'test_value'","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"47":{"_id":"47","name":"Last conversion partner name","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5034","origin_name":"Last conversion partner name","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"48":{"_id":"48","name":"Last event time","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5318","origin_name":"Last event time","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"49":{"_id":"49","name":"Last event URL","type":"va","description":"Last event URL for visitor","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"17","origin_name":"Last event URL","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"50":{"_id":"50","name":"Last UDO String","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5145","origin_name":"Last UDO String","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"51":{"_id":"51","name":"Last visit","type":"va","description":"Date of last visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"24","origin_name":"Last visit","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"52":{"_id":"52","name":"Last-seen tealium_event [str]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5324","origin_name":"Last-seen tealium_event [str]","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"53":{"_id":"53","name":"Last-seen Trace Id","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5320","origin_name":"Last-seen Trace Id","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"54":{"_id":"54","name":"Lifetime browser types used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime browser types used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"56","origin_name":"Lifetime browser types used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"55":{"_id":"55","name":"Lifetime browser versions used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime browser versions used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"62","origin_name":"Lifetime browser versions used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"56":{"_id":"56","name":"Lifetime devices used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime devices used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"54","origin_name":"Lifetime devices used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"57":{"_id":"57","name":"Lifetime event count","type":"va","description":"Total number of events triggered by user","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"22","origin_name":"Lifetime event count","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"58":{"_id":"58","name":"Lifetime operating systems used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime operating systems used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"58","origin_name":"Lifetime operating systems used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"59":{"_id":"59","name":"Lifetime order total","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5028","origin_name":"Lifetime order total","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"60":{"_id":"60","name":"Lifetime order total by partner name (favorite)","type":"va","description":"Captures the favorite number for Tally: Lifetime order total by partner name","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5031","origin_name":"Lifetime order total by partner name (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"61":{"_id":"61","name":"Lifetime platforms used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime platforms used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"60","origin_name":"Lifetime platforms used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"62":{"_id":"62","name":"LIfetime Test Stream Values (favorite)","type":"va","description":"Captures the favorite number for Tally: LIfetime Test Stream Values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5132","origin_name":"LIfetime Test Stream Values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"63":{"_id":"63","name":"Lifetime visit count","type":"va","description":"Total number of times user has visited site","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"21","origin_name":"Lifetime visit count","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"64":{"_id":"64","name":"Light Blue","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5065","origin_name":"Light Blue","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"65":{"_id":"65","name":"Most Recent GCLID","type":"va","description":"This setup ignores the edge case where a user could click two ads from this campaign within the same session - it will only send the last GCLID in those cases.","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5312","origin_name":"Most Recent GCLID","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"66":{"_id":"66","name":"Most Recent GCLID has changed this visit","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5314","origin_name":"Most Recent GCLID has changed this visit","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"67":{"_id":"67","name":"NO BOUNCERS HERE","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5322","origin_name":"NO BOUNCERS HERE","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"68":{"_id":"68","name":"Optin (imported)","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5149","origin_name":"Optin (imported)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"69":{"_id":"69","name":"Orange","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5059","origin_name":"Orange","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"70":{"_id":"70","name":"Pink","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5069","origin_name":"Pink","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"71":{"_id":"71","name":"Product Prices Purchases - Last Order Imported (favorite)","type":"va","description":"Captures the favorite number for Tally: Product Prices Purchases - Last Order Imported","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5120","origin_name":"Product Prices Purchases - Last Order Imported (favorite)","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"72":{"_id":"72","name":"Product Purchase Count (Lifetime) (favorite)","type":"va","description":"Captures the favorite number for Tally: Product Purchase Count (Lifetime)","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5118","origin_name":"Product Purchase Count (Lifetime) (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"73":{"_id":"73","name":"Red","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5057","origin_name":"Red","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"74":{"_id":"74","name":"Referred visit","type":"va","description":"The user was referred from another site","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"13","origin_name":"Referred visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"75":{"_id":"75","name":"Referrer","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5092","origin_name":"Referrer","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"76":{"_id":"76","name":"Returning visitor","type":"va","description":"Return visitor","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"27","origin_name":"Returning visitor","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"77":{"_id":"77","name":"Spend per Product (Lifetime) (favorite)","type":"va","description":"Captures the favorite number for Tally: Spend per Product (Lifetime)","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5122","origin_name":"Spend per Product (Lifetime) (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"78":{"_id":"78","name":"Tealium Test Visit","type":"va","description":"Set via query parameter &quot;tealium_test_visit=true&quot;","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5125","origin_name":"Tealium Test Visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"79":{"_id":"79","name":"Tealium Visitor ID (Last Seen)","type":"va","description":"3rd party wins if present","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5129","origin_name":"Tealium Visitor ID (Last Seen)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"80":{"_id":"80","name":"tealium_cf_visit_ttl","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"82","origin_name":"tealium_cf_visit_ttl","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"81":{"_id":"81","name":"Test Date","type":"va","description":"Expects format 2020-08-27T13:13:47.395Z ","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5195","origin_name":"Test Date","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"82":{"_id":"82","name":"Test Tally (favorite)","type":"va","description":"Captures the favorite number for Tally: Test Tally","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5093","origin_name":"Test Tally (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"83":{"_id":"83","name":"test_tiq_string values (favorite)","type":"va","description":"Captures the favorite number for Tally: test_tiq_string values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5136","origin_name":"test_tiq_string values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"84":{"_id":"84","name":"test_udo_string values (favorite)","type":"va","description":"Captures the favorite number for Tally: test_udo_string values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5138","origin_name":"test_udo_string values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"85":{"_id":"85","name":"Tester","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5141","origin_name":"Tester","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"86":{"_id":"86","name":"Total direct visits","type":"va","description":"Total direct visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"15","origin_name":"Total direct visits","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"87":{"_id":"87","name":"Total referred visits","type":"va","description":"Total referred visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"16","origin_name":"Total referred visits","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"88":{"_id":"88","name":"Total time spent on site in minutes","type":"va","description":"Sum duration of all user visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"25","origin_name":"Total time spent on site in minutes","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"89":{"_id":"89","name":"Unbadged","type":"va","description":"The visitor has not been assigned any badges","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"32","origin_name":"Unbadged","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"90":{"_id":"90","name":"Visit duration","type":"va","description":"Visit duration in minutes","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"12","origin_name":"Visit duration","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"91":{"_id":"91","name":"Visit end","type":"va","description":"Visit end date","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"11","origin_name":"Visit end","origin_type":"dates","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"92":{"_id":"92","name":"Visit start","type":"va","description":"Visit start date","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"10","origin_name":"Visit start","origin_type":"dates","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"93":{"_id":"93","name":"Weeks since first visit","type":"va","description":"Weeks elapsed since first visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"28","origin_name":"Weeks since first visit","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"94":{"_id":"94","name":"Weeks since first visit temp","type":"va","description":"Temporary store for computer value","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"80","origin_name":"Weeks since first visit temp","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"95":{"_id":"95","name":"Yellow","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5061","origin_name":"Yellow","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}}},"datacloud_merge":"true","datacloud_profile_name":"main","datacloud_revision":"1625226277606"}
