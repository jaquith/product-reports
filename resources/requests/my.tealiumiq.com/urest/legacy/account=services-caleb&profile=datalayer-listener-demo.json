{"customizations":{"2":{"title":"GTM Listener (2/4) - Data Layer Helper Library (provided by Google)","id":"100040","constructor":"","scope":"domready","status":"active","advExecOption":"alr","initialize":"","labels":"","codeDevData":{"draftSnippets":{"dc20b3d5d2cddf82fad332821ca5e9a4efdcede4a273aa193d2b495bdcc92825":{"creationDate":"201906200703","updateDate":"201906200733","updatedBy":"caleb.jaquith@tealium.com","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Data Layer Helper Library (provided by Google), makes it easy to queue \n *               events. We use it here to process existing GTM Events for Collect\n * \n * Documentation: https://github.com/google/data-layer-helper\n * Source: https://raw.githubusercontent.com/google/data-layer-helper/master/dist/data-layer-helper.js\n *\n*/\n\n(function(){/*\n  jQuery v1.9.1 (c) 2005, 2012\n  jQuery Foundation, Inc. jquery.org/license.\n */\n var g=/\\[object (Boolean|Number|String|Function|Array|Date|RegExp)\\]/;function h(a){return null==a?String(a):(a=g.exec(Object.prototype.toString.call(Object(a))))?a[1].toLowerCase():&quot;object&quot;}function k(a,b){return Object.prototype.hasOwnProperty.call(Object(a),b)}function m(a){if(!a||&quot;object&quot;!=h(a)||a.nodeType||a==a.window)return!1;try{if(a.constructor&amp;&amp;!k(a,&quot;constructor&quot;)&amp;&amp;!k(a.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(b){return!1}for(var c in a);return void 0===c||k(a,c)};/*\n  Copyright 2012 Google Inc. All rights reserved. */\n function n(a,b,c){this.b=a;this.f=b||function(){};this.d=!1;this.a={};this.c=[];this.e=p(this);r(this,a,!c);var d=a.push,e=this;a.push=function(){var b=[].slice.call(arguments,0),c=d.apply(a,b);r(e,b);return c}}window.DataLayerHelper=n;n.prototype.get=function(a){var b=this.a;a=a.split(&quot;.&quot;);for(var c=0;c&lt;a.length;c++){if(void 0===b[a[c]])return;b=b[a[c]]}return b};n.prototype.flatten=function(){this.b.splice(0,this.b.length);this.b[0]={};s(this.a,this.b[0])};\n function r(a,b,c){for(a.c.push.apply(a.c,b);!1===a.d&amp;&amp;0&lt;a.c.length;){b=a.c.shift();if(&quot;array&quot;==h(b))a:{var d=b,e=a.a;if(&quot;string&quot;==h(d[0])){for(var f=d[0].split(&quot;.&quot;),u=f.pop(),d=d.slice(1),l=0;l&lt;f.length;l++){if(void 0===e[f[l]])break a;e=e[f[l]]}try{e[u].apply(e,d)}catch(v){}}}else if(&quot;function&quot;==typeof b)try{b.call(a.e)}catch(w){}else if(m(b))for(var q in b)s(t(q,b[q]),a.a);else continue;c||(a.d=!0,a.f(a.a,b),a.d=!1)}}\n function p(a){return{set:function(b,c){s(t(b,c),a.a)},get:function(b){return a.get(b)}}}function t(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]]=b;return c}function s(a,b){for(var c in a)if(k(a,c)){var d=a[c];&quot;array&quot;==h(d)?(&quot;array&quot;==h(b[c])||(b[c]=[]),s(d,b[c])):m(d)?(m(b[c])||(b[c]={}),s(d,b[c])):b[c]=d}};})();","name":"Library"}},"queueSeq":"5","draftSeq":"1","promotedSnippets":{"ef260e9aa3c673af240d17a2660480361a8e081d1ffeca2a5ed0e3219fc18567":{"promotedTimestamp":"201910101225","promotedDraftName":"Library","promotedBy":"caleb.jaquith@tealium.com","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Data Layer Helper Library (provided by Google), makes it easy to queue \n *               events. We use it here to process existing GTM Events for Collect\n * \n * Documentation: https://github.com/google/data-layer-helper\n * Source: https://raw.githubusercontent.com/google/data-layer-helper/master/dist/data-layer-helper.js\n *\n*/\n\n(function(){/*\n  jQuery v1.9.1 (c) 2005, 2012\n  jQuery Foundation, Inc. jquery.org/license.\n */\n var g=/\\[object (Boolean|Number|String|Function|Array|Date|RegExp)\\]/;function h(a){return null==a?String(a):(a=g.exec(Object.prototype.toString.call(Object(a))))?a[1].toLowerCase():&quot;object&quot;}function k(a,b){return Object.prototype.hasOwnProperty.call(Object(a),b)}function m(a){if(!a||&quot;object&quot;!=h(a)||a.nodeType||a==a.window)return!1;try{if(a.constructor&amp;&amp;!k(a,&quot;constructor&quot;)&amp;&amp;!k(a.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(b){return!1}for(var c in a);return void 0===c||k(a,c)};/*\n  Copyright 2012 Google Inc. All rights reserved. */\n function n(a,b,c){this.b=a;this.f=b||function(){};this.d=!1;this.a={};this.c=[];this.e=p(this);r(this,a,!c);var d=a.push,e=this;a.push=function(){var b=[].slice.call(arguments,0),c=d.apply(a,b);r(e,b);return c}}window.DataLayerHelper=n;n.prototype.get=function(a){var b=this.a;a=a.split(&quot;.&quot;);for(var c=0;c&lt;a.length;c++){if(void 0===b[a[c]])return;b=b[a[c]]}return b};n.prototype.flatten=function(){this.b.splice(0,this.b.length);this.b[0]={};s(this.a,this.b[0])};\n function r(a,b,c){for(a.c.push.apply(a.c,b);!1===a.d&amp;&amp;0&lt;a.c.length;){b=a.c.shift();if(&quot;array&quot;==h(b))a:{var d=b,e=a.a;if(&quot;string&quot;==h(d[0])){for(var f=d[0].split(&quot;.&quot;),u=f.pop(),d=d.slice(1),l=0;l&lt;f.length;l++){if(void 0===e[f[l]])break a;e=e[f[l]]}try{e[u].apply(e,d)}catch(v){}}}else if(&quot;function&quot;==typeof b)try{b.call(a.e)}catch(w){}else if(m(b))for(var q in b)s(t(q,b[q]),a.a);else continue;c||(a.d=!0,a.f(a.a,b),a.d=!1)}}\n function p(a){return{set:function(b,c){s(t(b,c),a.a)},get:function(b){return a.get(b)}}}function t(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]]=b;return c}function s(a,b){for(var c in a)if(k(a,c)){var d=a[c];&quot;array&quot;==h(d)?(&quot;array&quot;==h(b[c])||(b[c]=[]),s(d,b[c])):m(d)?(m(b[c])||(b[c]={}),s(d,b[c])):b[c]=d}};})();","name":"dev"},"3f3ef786b34d6dd716e1812c8b74a7a0e1f05aa5f3230588f6f5bcd00c6c8392":{"promotedTimestamp":"201906211317","promotedDraftName":"Library","promotedBy":"caleb.jaquith@tealium.com","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Data Layer Helper Library (provided by Google), makes it easy to queue \n *               events. We use it here to process existing GTM Events for Collect\n * \n * Documentation: https://github.com/google/data-layer-helper\n * Source: https://raw.githubusercontent.com/google/data-layer-helper/master/dist/data-layer-helper.js\n *\n*/\n\n(function(){/*\n  jQuery v1.9.1 (c) 2005, 2012\n  jQuery Foundation, Inc. jquery.org/license.\n */\n var g=/\\[object (Boolean|Number|String|Function|Array|Date|RegExp)\\]/;function h(a){return null==a?String(a):(a=g.exec(Object.prototype.toString.call(Object(a))))?a[1].toLowerCase():&quot;object&quot;}function k(a,b){return Object.prototype.hasOwnProperty.call(Object(a),b)}function m(a){if(!a||&quot;object&quot;!=h(a)||a.nodeType||a==a.window)return!1;try{if(a.constructor&amp;&amp;!k(a,&quot;constructor&quot;)&amp;&amp;!k(a.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(b){return!1}for(var c in a);return void 0===c||k(a,c)};/*\n  Copyright 2012 Google Inc. All rights reserved. */\n function n(a,b,c){this.b=a;this.f=b||function(){};this.d=!1;this.a={};this.c=[];this.e=p(this);r(this,a,!c);var d=a.push,e=this;a.push=function(){var b=[].slice.call(arguments,0),c=d.apply(a,b);r(e,b);return c}}window.DataLayerHelper=n;n.prototype.get=function(a){var b=this.a;a=a.split(&quot;.&quot;);for(var c=0;c&lt;a.length;c++){if(void 0===b[a[c]])return;b=b[a[c]]}return b};n.prototype.flatten=function(){this.b.splice(0,this.b.length);this.b[0]={};s(this.a,this.b[0])};\n function r(a,b,c){for(a.c.push.apply(a.c,b);!1===a.d&amp;&amp;0&lt;a.c.length;){b=a.c.shift();if(&quot;array&quot;==h(b))a:{var d=b,e=a.a;if(&quot;string&quot;==h(d[0])){for(var f=d[0].split(&quot;.&quot;),u=f.pop(),d=d.slice(1),l=0;l&lt;f.length;l++){if(void 0===e[f[l]])break a;e=e[f[l]]}try{e[u].apply(e,d)}catch(v){}}}else if(&quot;function&quot;==typeof b)try{b.call(a.e)}catch(w){}else if(m(b))for(var q in b)s(t(q,b[q]),a.a);else continue;c||(a.d=!0,a.f(a.a,b),a.d=!1)}}\n function p(a){return{set:function(b,c){s(t(b,c),a.a)},get:function(b){return a.get(b)}}}function t(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]]=b;return c}function s(a,b){for(var c in a)if(k(a,c)){var d=a[c];&quot;array&quot;==h(d)?(&quot;array&quot;==h(b[c])||(b[c]=[]),s(d,b[c])):m(d)?(m(b[c])||(b[c]={}),s(d,b[c])):b[c]=d}};})();","name":"qa"},"6754af9632a2745e85c293e5aac0863370d9bd3330b9938c00cadfd215227d77":{"code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Data Layer Helper Library (provided by Google), makes it easy to queue \n *               events. We use it here to process existing GTM Events for Collect\n * \n * Documentation: https://github.com/google/data-layer-helper\n * Source: https://raw.githubusercontent.com/google/data-layer-helper/master/dist/data-layer-helper.js\n *\n*/\n\n(function(){/*\n  jQuery v1.9.1 (c) 2005, 2012\n  jQuery Foundation, Inc. jquery.org/license.\n */\n var g=/\\[object (Boolean|Number|String|Function|Array|Date|RegExp)\\]/;function h(a){return null==a?String(a):(a=g.exec(Object.prototype.toString.call(Object(a))))?a[1].toLowerCase():&quot;object&quot;}function k(a,b){return Object.prototype.hasOwnProperty.call(Object(a),b)}function m(a){if(!a||&quot;object&quot;!=h(a)||a.nodeType||a==a.window)return!1;try{if(a.constructor&amp;&amp;!k(a,&quot;constructor&quot;)&amp;&amp;!k(a.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(b){return!1}for(var c in a);return void 0===c||k(a,c)};/*\n  Copyright 2012 Google Inc. All rights reserved. */\n function n(a,b,c){this.b=a;this.f=b||function(){};this.d=!1;this.a={};this.c=[];this.e=p(this);r(this,a,!c);var d=a.push,e=this;a.push=function(){var b=[].slice.call(arguments,0),c=d.apply(a,b);r(e,b);return c}}window.DataLayerHelper=n;n.prototype.get=function(a){var b=this.a;a=a.split(&quot;.&quot;);for(var c=0;c&lt;a.length;c++){if(void 0===b[a[c]])return;b=b[a[c]]}return b};n.prototype.flatten=function(){this.b.splice(0,this.b.length);this.b[0]={};s(this.a,this.b[0])};\n function r(a,b,c){for(a.c.push.apply(a.c,b);!1===a.d&amp;&amp;0&lt;a.c.length;){b=a.c.shift();if(&quot;array&quot;==h(b))a:{var d=b,e=a.a;if(&quot;string&quot;==h(d[0])){for(var f=d[0].split(&quot;.&quot;),u=f.pop(),d=d.slice(1),l=0;l&lt;f.length;l++){if(void 0===e[f[l]])break a;e=e[f[l]]}try{e[u].apply(e,d)}catch(v){}}}else if(&quot;function&quot;==typeof b)try{b.call(a.e)}catch(w){}else if(m(b))for(var q in b)s(t(q,b[q]),a.a);else continue;c||(a.d=!0,a.f(a.a,b),a.d=!1)}}\n function p(a){return{set:function(b,c){s(t(b,c),a.a)},get:function(b){return a.get(b)}}}function t(a,b){for(var c={},d=c,e=a.split(&quot;.&quot;),f=0;f&lt;e.length-1;f++)d=d[e[f]]={};d[e[e.length-1]]=b;return c}function s(a,b){for(var c in a)if(k(a,c)){var d=a[c];&quot;array&quot;==h(d)?(&quot;array&quot;==h(b[c])||(b[c]=[]),s(d,b[c])):m(d)?(m(b[c])||(b[c]={}),s(d,b[c])):b[c]=d}};})();","name":"prod","promotedDraftName":"Library","promotedTimestamp":"201906211317","promotedBy":"caleb.jaquith@tealium.com"}}},"blockPubTargetsLogic":"true","publishedTargets":"dev","type":"new","extType":"Javascript Code","_id":"2","sort":"1","notes":"","selectedTargets":{"qa":"true","prod":"true","dev":"true"}},"3":{"codeDevData":{"queueSeq":"19","draftSnippets":{"82e6d189952d4df484b68fcf3dca63cb64d43d701598bfefa7a7a4183a14b163":{"updatedBy":"caleb.jaquith@tealium.com","updateDate":"202002110919","creationDate":"201906200719","name":"Listener","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Add listener function using the DataLayer Helper\n */\n \n\nvar processEvent = function(model, message) {\n    // exit if the flattener function isn't present on the page\n    if (!teal || typeof teal.flattenObject !== &quot;function&quot;) {\n        return;\n    }\n    /**\n     * Process the model, once per page on (or after) DOM Load\n     */\n    var flat = {};\n    \n    // utag.view on GTM Load to help see dataLayer for now\n    if (message.event === &quot;gtm.load&quot;) {\n        //console.log(teal.flattenObject(message, message));\n        flat = teal.flattenObject(model, model);\n        flat.tealium_event = flat.page_type || flat.pageType || &quot;other-view&quot;;\n        console.log(&quot;++++ View / &quot;+ flat.tealium_event, flat);\n        utag.view(flat);\n    }\n    \n    // some click events as examples\n    if (message.event === &quot;ButtonClickEvent&quot; || message.event === &quot;GAevent&quot;) {\n        flat = teal.flattenObject(message, message);\n        flat.tealium_event = flat.event;\n        console.log(&quot;++++ Link / &quot; + flat.tealium_event, flat);\n        utag.link(flat);\n    }\n};\n\n// make sure the object is actually defined\nwindow.dataLayer = window.dataLayer || window.dataLayerKP || []; // cross-site compatibility, aroundhome uses dataLayerKP\n// since we're still using the legacy events, we start with a reformatting function \nif (typeof processEvent === &quot;function&quot;) {\n    var helper = new DataLayerHelper(window.dataLayer, processEvent, true);\n}"}},"draftSeq":"0","promotedSnippets":{"3f3ef786b34d6dd716e1812c8b74a7a0e1f05aa5f3230588f6f5bcd00c6c8392":{"promotedDraftName":"Listener","promotedTimestamp":"202002110922","promotedBy":"caleb.jaquith@tealium.com","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Add listener function using the DataLayer Helper\n */\n \n\nvar processEvent = function(model, message) {\n    // exit if the flattener function isn't present on the page\n    if (!teal || typeof teal.flattenObject !== &quot;function&quot;) {\n        return;\n    }\n    /**\n     * Process the model, once per page on (or after) DOM Load\n     */\n    var flat = {};\n    \n    // utag.view on GTM Load to help see dataLayer for now\n    if (message.event === &quot;gtm.load&quot;) {\n        //console.log(teal.flattenObject(message, message));\n        flat = teal.flattenObject(model, model);\n        flat.tealium_event = flat.page_type || flat.pageType || &quot;other-view&quot;;\n        console.log(&quot;++++ View / &quot;+ flat.tealium_event, flat);\n        utag.view(flat);\n    }\n    \n    // some click events as examples\n    if (message.event === &quot;ButtonClickEvent&quot; || message.event === &quot;GAevent&quot;) {\n        flat = teal.flattenObject(message, message);\n        flat.tealium_event = flat.event;\n        console.log(&quot;++++ Link / &quot; + flat.tealium_event, flat);\n        utag.link(flat);\n    }\n};\n\n// make sure the object is actually defined\nwindow.dataLayer = window.dataLayer || window.dataLayerKP || []; // cross-site compatibility, aroundhome uses dataLayerKP\n// since we're still using the legacy events, we start with a reformatting function \nif (typeof processEvent === &quot;function&quot;) {\n    var helper = new DataLayerHelper(window.dataLayer, processEvent, true);\n}","name":"qa"},"6754af9632a2745e85c293e5aac0863370d9bd3330b9938c00cadfd215227d77":{"name":"prod","code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Add listener function using the DataLayer Helper\n */\n \n\nvar processEvent = function(model, message) {\n    // exit if the flattener function isn't present on the page\n    if (!teal || typeof teal.flattenObject !== &quot;function&quot;) {\n        return;\n    }\n    /**\n     * Process the model, once per page on (or after) DOM Load\n     */\n    var flat = {};\n    \n    // utag.view on GTM Load to help see dataLayer for now\n    if (message.event === &quot;gtm.load&quot;) {\n        //console.log(teal.flattenObject(message, message));\n        flat = teal.flattenObject(model, model);\n        flat.tealium_event = flat.page_type || flat.pageType || &quot;other-view&quot;;\n        console.log(&quot;++++ View / &quot;+ flat.tealium_event, flat);\n        utag.view(flat);\n    }\n    \n    // some click events as examples\n    if (message.event === &quot;ButtonClickEvent&quot; || message.event === &quot;GAevent&quot;) {\n        flat = teal.flattenObject(message, message);\n        flat.tealium_event = flat.event;\n        console.log(&quot;++++ Link / &quot; + flat.tealium_event, flat);\n        utag.link(flat);\n    }\n};\n\n// make sure the object is actually defined\nwindow.dataLayer = window.dataLayer || window.dataLayerKP || []; // cross-site compatibility, aroundhome uses dataLayerKP\n// since we're still using the legacy events, we start with a reformatting function \nif (typeof processEvent === &quot;function&quot;) {\n    var helper = new DataLayerHelper(window.dataLayer, processEvent, true);\n}","promotedBy":"caleb.jaquith@tealium.com","promotedTimestamp":"202002110922","promotedDraftName":"Listener"},"ef260e9aa3c673af240d17a2660480361a8e081d1ffeca2a5ed0e3219fc18567":{"code":"/**\n * Scope       : DOM Ready\n * Execution   : n/a\n * Condition   : n/a\n * Description : GTM Listener - Add listener function using the DataLayer Helper\n */\n \n\nvar processEvent = function(model, message) {\n    // exit if the flattener function isn't present on the page\n    if (!teal || typeof teal.flattenObject !== &quot;function&quot;) {\n        return;\n    }\n    /**\n     * Process the model, once per page on (or after) DOM Load\n     */\n    var flat = {};\n    \n    // utag.view on GTM Load to help see dataLayer for now\n    if (message.event === &quot;gtm.load&quot;) {\n        //console.log(teal.flattenObject(message, message));\n        flat = teal.flattenObject(model, model);\n        flat.tealium_event = flat.page_type || flat.pageType || &quot;other-view&quot;;\n        console.log(&quot;++++ View / &quot;+ flat.tealium_event, flat);\n        utag.view(flat);\n    }\n    \n    // some click events as examples\n    if (message.event === &quot;ButtonClickEvent&quot; || message.event === &quot;GAevent&quot;) {\n        flat = teal.flattenObject(message, message);\n        flat.tealium_event = flat.event;\n        console.log(&quot;++++ Link / &quot; + flat.tealium_event, flat);\n        utag.link(flat);\n    }\n};\n\n// make sure the object is actually defined\nwindow.dataLayer = window.dataLayer || window.dataLayerKP || []; // cross-site compatibility, aroundhome uses dataLayerKP\n// since we're still using the legacy events, we start with a reformatting function \nif (typeof processEvent === &quot;function&quot;) {\n    var helper = new DataLayerHelper(window.dataLayer, processEvent, true);\n}","name":"dev","promotedDraftName":"Listener","promotedTimestamp":"202002110922","promotedBy":"caleb.jaquith@tealium.com"}}},"labels":"","initialize":"","advExecOption":"alr","scope":"domready","constructor":"","status":"active","id":"100040","title":"GTM Listener (4/4) - Data Layer Listener Function","selectedTargets":{"prod":"true","dev":"true","qa":"true"},"sort":"3","notes":"afdadfda","extType":"Javascript Code","_id":"3","type":"new","publishedTargets":"dev","blockPubTargetsLogic":"true"},"4":{"title":"GTM Listener (1/4) - Disable automatic utag.view call","id":"100040","labels":"","initialize":"","codeDevData":{"draftSeq":"1","promotedSnippets":{"6754af9632a2745e85c293e5aac0863370d9bd3330b9938c00cadfd215227d77":{"promotedBy":"caleb.jaquith@tealium.com","promotedDraftName":"Draft 1","promotedTimestamp":"201906211317","name":"prod","code":"// Preloader\n\n// disable the automatic view, we want to fire it from the listener instead\nwindow.utag_cfg_ovrd = window.utag_cfg_ovrd || {};\nwindow.utag_cfg_ovrd.noview = true;"},"3f3ef786b34d6dd716e1812c8b74a7a0e1f05aa5f3230588f6f5bcd00c6c8392":{"promotedBy":"caleb.jaquith@tealium.com","promotedTimestamp":"201906211317","promotedDraftName":"Draft 1","name":"qa","code":"// Preloader\n\n// disable the automatic view, we want to fire it from the listener instead\nwindow.utag_cfg_ovrd = window.utag_cfg_ovrd || {};\nwindow.utag_cfg_ovrd.noview = true;"},"ef260e9aa3c673af240d17a2660480361a8e081d1ffeca2a5ed0e3219fc18567":{"promotedDraftName":"Draft 1","promotedTimestamp":"201906211317","promotedBy":"caleb.jaquith@tealium.com","code":"// Preloader\n\n// disable the automatic view, we want to fire it from the listener instead\nwindow.utag_cfg_ovrd = window.utag_cfg_ovrd || {};\nwindow.utag_cfg_ovrd.noview = true;","name":"dev"}},"queueSeq":"2","draftSnippets":{"156e808776455eb7fb3231a67b22d1d38ab0ed941db5b8d157735eea6c9da88b":{"updateDate":"201906200731","creationDate":"201906200726","updatedBy":"caleb.jaquith@tealium.com","code":"// Preloader\n\n// disable the automatic view, we want to fire it from the listener instead\nwindow.utag_cfg_ovrd = window.utag_cfg_ovrd || {};\nwindow.utag_cfg_ovrd.noview = true;","name":"Draft 1"}}},"scope":"preload","constructor":"","status":"active","advExecOption":"alr","type":"new","blockPubTargetsLogic":"true","publishedTargets":"dev","sort":"0","notes":"","selectedTargets":{"prod":"true","dev":"true","qa":"true"},"extType":"Javascript Code","_id":"4"},"8":{"title":"GTM Listener (3/4) - Tealium Flattener Definitions","id":"100040","codeDevData":{"draftSnippets":{"156e808776455eb7fb3231a67b22d1d38ab0ed941db5b8d157735eea6c9da88b":{"updatedBy":"caleb.jaquith@tealium.com","updateDate":"201906211315","creationDate":"201906211315","name":"Draft 1","code":"// Flattener, pulled from https://tags.tiqcdn.com/utag/tealium-solutions/main/prod/utag.9.js as instructed by\n// https://community.tealiumiq.com/t5/iQ-Tag-Management/Data-Layer-Converter/ta-p/17581#toc-hId-1329378795\n\n//Define the teal global namespace\nwindow.teal = window.teal || {};\nteal.ignore_keys = {};\nteal.replace_keys = {};\nteal.prefix = &quot;&quot;;\n\n//In cases of a nested object, what should join the parent key and child key\nteal.nested_delimiter = &quot;.&quot;;\n\n//Ignore keys in the data layer that start with the following text.\n//Expecting an object of strings\n/*\nteal.ignore_keys = {\n  &quot;user&quot; : 1,\n  &quot;util&quot; : 1\n};\n*/\n\n//Specify a prefix for data layer elements being sent to the utag_data object.\n//Instead of utag_data.productID, it could be utag_data.dl_productID\n// teal.prefix = &quot;dl_&quot;;\n\n//Keys to be removed from the new flattened key name\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pi.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;pi&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.pageName\n/* teal.replace_keys = {\n    &quot;page&quot;:&quot;&quot;,\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n/*****************DO NOT MODIFY BELOW***********************/\n\nteal.flattener_version = 1.4;\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n// Add the Object.keys method for older versions of IE\nObject.keys||(Object.keys=function(){&quot;use strict&quot;;var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable(&quot;toString&quot;),c=[&quot;toString&quot;,&quot;toLocaleString&quot;,&quot;valueOf&quot;,&quot;hasOwnProperty&quot;,&quot;isPrototypeOf&quot;,&quot;propertyIsEnumerable&quot;,&quot;constructor&quot;],d=c.length;return function(e){if(&quot;object&quot;!=typeof e&amp;&amp;(&quot;function&quot;!=typeof e||null===e))throw new TypeError(&quot;Object.keys called on non-object&quot;);var g,h,f=[];for(g in e)a.call(e,g)&amp;&amp;f.push(g);if(b)for(h=0;h&lt;d;h++)a.call(e,c[h])&amp;&amp;f.push(c[h]);return f}}());\n\nteal.ignoreKey = function(key,re){\n  var should_ignore_key = 0;\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.ignore_keys_list === 'undefined'){\n    teal.ignore_keys_list = Object.keys(teal.ignore_keys);\n    teal.ignore_keys_list.forEach(function(name){\n      //Store a copy of the regex in the object\n      teal.ignore_keys[name] = new RegExp(&quot;^&quot;+name);\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }else{\n    //Loop through the ignore_keys object to see if we should ignore this key\n    teal.ignore_keys_list.forEach(function(name){\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }\n  return should_ignore_key;\n}\n\nteal.getKeyName = function(key,re){\n  //Create a new object to store regexs or use existing one\n  teal.replace_keys_regex = teal.replace_keys_regex || {};\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.replace_keys_list === 'undefined'){\n    teal.replace_keys_list = Object.keys(teal.replace_keys);\n    //Make a start of string and end of string regex\n    teal.replace_keys_regex.startOfString = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n    teal.replace_keys_regex.endOfString = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n    teal.replace_keys_list.forEach(function(name){\n      //Store a copy of the regex in the teal.replace_keys_regex object so that the regexs are only built once\n      teal.replace_keys_regex[name] = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]?&quot; + name + &quot;[&quot; + teal.nested_delimiter + &quot;]?&quot;, &quot;g&quot;);\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }else{\n    //Loop through the replace_keys object to see what we should be replacing\n    teal.replace_keys_list.forEach(function(name){\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }\n  return key;\n}\n\nteal.keyReplace = function(key,name,re){\n  //Check to see if we are replacing the key name with a new value or if we are removing the key altogether\n  if(teal.replace_keys[name] === ''){\n    //The key needs to be removed completely\n    key = key.replace(re,teal.nested_delimiter);\n    //Check to see if the key starts with the nested delimiter and if so, remove it\n    if(key.indexOf(teal.nested_delimiter) === 0){\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }else{\n    //Make a copy of the original key to see how we need to update the key name\n    var origKey = key;\n    //Replace the key name\n    key = key.replace(re,teal.nested_delimiter + teal.replace_keys[name] + teal.nested_delimiter);\n    //Check for the start of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.startOfString)){\n      //Remove the nested delimiter from the start of the string\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n    //Check for the end of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.endOfString)){\n      //Add the nested delimiter to the end of the string\n      var cleanRegEx = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }\n  return key;\n}\n\nteal.processDataObject = function(obj,new_obj,parent_key,create_array){\n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else{\n    //Add the nested_delimiter to the parent key if the delimiter isn't already at the end\n    teal.nested_delimiter_regex = teal.nested_delimiter_regex || new RegExp(&quot;[&quot;+teal.nested_delimiter+&quot;]$&quot;);\n    if(!parent_key.match(teal.nested_delimiter_regex)){\n      parent_key += &quot;&quot;+teal.nested_delimiter;\n    }\n  }\n  Object.keys(obj).forEach(function(key){\n    var nested_key_name = parent_key+key;\n    //Format the new key name and take out any whitespace\n    var new_key_name = teal.getKeyName((teal.prefix+parent_key+key).replace(/\\s/g, ''));\n    //Set the key_type to limit the number of typeof checks\n    var key_type = teal.typeOf(obj[key]);\n    if(key_type !== 'undefined' &amp;&amp; key_type != null){\n      if(key_type.match(/boolean|string|number|date/) &amp;&amp; !teal.ignoreKey(key)){\n        //If obj[key] is a date, convert to ISOString\n        if(teal.typeOf(obj[key]) === 'date'){\n          obj[key] = obj[key].toISOString();\n        }\n        //Check to see if we need to create an array for this data point\n        if(create_array){\n          //First check to see if this key exists\n          if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n            //Make the key an array                       \n            new_obj[new_key_name] = [];\n          }\n          new_obj[new_key_name].push(&quot;&quot;+obj[key]); //Force value to be a string\n        }else{\n          //If the value of the key is a boolean or a string or a number and \n          //the key shouldn't be ignored add to the data layer\n          new_obj[new_key_name] = &quot;&quot;+obj[key]; //Force value to be a string\n        }\n      }else if(key_type === 'object' &amp;&amp; !teal.ignoreKey(key)){\n        //Process this piece of the data layer and merge it\n        teal.processDataObject(obj[key],new_obj,nested_key_name,create_array);\n      }else if(key_type === 'array'){\n        teal.processDataArray(obj[key],new_obj,nested_key_name);\n      }\n    }\n  });\n}\n\nteal.processDataArray = function(obj,new_obj,parent_key){\n  var objLength = obj.length; \n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else if(objLength &gt; 0 &amp;&amp; teal.typeOf(obj[0]).match(/boolean|string|number|date/)){\n    //This is a normal array that doesn't need a nested delimiter\n  }else{\n    //Add the nested_delimiter to the parent key\n    parent_key += &quot;&quot;+teal.nested_delimiter;\n  }\n  //Format the new key name and take out any whitespace\n  var new_key_name = teal.getKeyName((teal.prefix+parent_key).replace(/\\s/g, ''));\n  for(var n = 0; n &lt; objLength; n++){\n    var key_type = teal.typeOf(obj[n]);\n    if(key_type.match(/boolean|string|number|date/)){\n      //If obj[n] is a date, convert to ISOString\n      if(key_type === 'date'){\n        obj[n] = obj[n].toISOString();\n      }\n      //First check to see if this key exists\n      if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n        //Make the key an array                       \n        new_obj[new_key_name] = [];\n      }\n      //If the value of the key is a boolean or a string or a number and \n      //the key shouldn't be ignored add to the data layer                        \n      new_obj[new_key_name].push(&quot;&quot;+obj[n]);\n    }else if(key_type === 'object'){\n      teal.processDataObject(obj[n],new_obj,new_key_name,1);\n    }\n  }\n}\n\nteal.typeOf = function(e){return ({}).toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();}\n\nteal.flattenObject = function(obj,new_obj){\n  //Make sure object exists\n  if(typeof obj === 'undefined'){\n    return false;\n  }\n  //Check to see if we want to flatten the same object and keep the reference\n  var mergeObject = false;\n  if(obj === new_obj){\n    mergeObject = true;\n    //Start off a clean copy of the object\n    new_obj = {};\n  }\n  //Make sure new object exists\n  if(typeof new_obj === 'undefined'){\n    new_obj = {};\n  }\n  //Check to see if this object is an array\n  if(teal.typeOf(obj) === 'array'){\n    //Store a safe copy of this object in case we are processing the b object\n    var temp_array = JSON.parse(JSON.stringify(obj));\n    var temp_array_length = temp_array.length;\n    //Clean up the object\n    obj = {};\n    //Let's see if the obj and new_obj are the same.  If so, going to assume we are using the b object\n    if(obj == new_obj){\n      //Let's ensure that we have the a object\n      if(typeof a === 'undefined'){\n        var a = 'view';\n      }\n      //Add the automatic utag data points\n      utag.loader.RD(new_obj,a);\n    }\n    for(var i = 0; i &lt; temp_array_length; i++){\n        teal.processDataObject(temp_array[i],new_obj);\n    }\n  }else{\n    teal.processDataObject(obj,new_obj);\n  }\n  if(mergeObject){\n    //Need to delete everything out of obj and replace with new_obj\n    Object.keys(obj).forEach(function(key){\n      delete obj[key];\n    });\n    //Now that we have a clean original object, add everything from new_obj which allows the reference to be kept\n    Object.keys(new_obj).forEach(function(key){\n      obj[key] = new_obj[key];\n    });\n  }\n\n  return new_obj;\n}"}},"queueSeq":"2","promotedSnippets":{"ef260e9aa3c673af240d17a2660480361a8e081d1ffeca2a5ed0e3219fc18567":{"name":"dev","code":"// Flattener, pulled from https://tags.tiqcdn.com/utag/tealium-solutions/main/prod/utag.9.js as instructed by\n// https://community.tealiumiq.com/t5/iQ-Tag-Management/Data-Layer-Converter/ta-p/17581#toc-hId-1329378795\n\n//Define the teal global namespace\nwindow.teal = window.teal || {};\nteal.ignore_keys = {};\nteal.replace_keys = {};\nteal.prefix = &quot;&quot;;\n\n//In cases of a nested object, what should join the parent key and child key\nteal.nested_delimiter = &quot;.&quot;;\n\n//Ignore keys in the data layer that start with the following text.\n//Expecting an object of strings\n/*\nteal.ignore_keys = {\n  &quot;user&quot; : 1,\n  &quot;util&quot; : 1\n};\n*/\n\n//Specify a prefix for data layer elements being sent to the utag_data object.\n//Instead of utag_data.productID, it could be utag_data.dl_productID\n// teal.prefix = &quot;dl_&quot;;\n\n//Keys to be removed from the new flattened key name\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pi.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;pi&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.pageName\n/* teal.replace_keys = {\n    &quot;page&quot;:&quot;&quot;,\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n/*****************DO NOT MODIFY BELOW***********************/\n\nteal.flattener_version = 1.4;\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n// Add the Object.keys method for older versions of IE\nObject.keys||(Object.keys=function(){&quot;use strict&quot;;var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable(&quot;toString&quot;),c=[&quot;toString&quot;,&quot;toLocaleString&quot;,&quot;valueOf&quot;,&quot;hasOwnProperty&quot;,&quot;isPrototypeOf&quot;,&quot;propertyIsEnumerable&quot;,&quot;constructor&quot;],d=c.length;return function(e){if(&quot;object&quot;!=typeof e&amp;&amp;(&quot;function&quot;!=typeof e||null===e))throw new TypeError(&quot;Object.keys called on non-object&quot;);var g,h,f=[];for(g in e)a.call(e,g)&amp;&amp;f.push(g);if(b)for(h=0;h&lt;d;h++)a.call(e,c[h])&amp;&amp;f.push(c[h]);return f}}());\n\nteal.ignoreKey = function(key,re){\n  var should_ignore_key = 0;\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.ignore_keys_list === 'undefined'){\n    teal.ignore_keys_list = Object.keys(teal.ignore_keys);\n    teal.ignore_keys_list.forEach(function(name){\n      //Store a copy of the regex in the object\n      teal.ignore_keys[name] = new RegExp(&quot;^&quot;+name);\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }else{\n    //Loop through the ignore_keys object to see if we should ignore this key\n    teal.ignore_keys_list.forEach(function(name){\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }\n  return should_ignore_key;\n}\n\nteal.getKeyName = function(key,re){\n  //Create a new object to store regexs or use existing one\n  teal.replace_keys_regex = teal.replace_keys_regex || {};\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.replace_keys_list === 'undefined'){\n    teal.replace_keys_list = Object.keys(teal.replace_keys);\n    //Make a start of string and end of string regex\n    teal.replace_keys_regex.startOfString = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n    teal.replace_keys_regex.endOfString = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n    teal.replace_keys_list.forEach(function(name){\n      //Store a copy of the regex in the teal.replace_keys_regex object so that the regexs are only built once\n      teal.replace_keys_regex[name] = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]?&quot; + name + &quot;[&quot; + teal.nested_delimiter + &quot;]?&quot;, &quot;g&quot;);\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }else{\n    //Loop through the replace_keys object to see what we should be replacing\n    teal.replace_keys_list.forEach(function(name){\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }\n  return key;\n}\n\nteal.keyReplace = function(key,name,re){\n  //Check to see if we are replacing the key name with a new value or if we are removing the key altogether\n  if(teal.replace_keys[name] === ''){\n    //The key needs to be removed completely\n    key = key.replace(re,teal.nested_delimiter);\n    //Check to see if the key starts with the nested delimiter and if so, remove it\n    if(key.indexOf(teal.nested_delimiter) === 0){\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }else{\n    //Make a copy of the original key to see how we need to update the key name\n    var origKey = key;\n    //Replace the key name\n    key = key.replace(re,teal.nested_delimiter + teal.replace_keys[name] + teal.nested_delimiter);\n    //Check for the start of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.startOfString)){\n      //Remove the nested delimiter from the start of the string\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n    //Check for the end of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.endOfString)){\n      //Add the nested delimiter to the end of the string\n      var cleanRegEx = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }\n  return key;\n}\n\nteal.processDataObject = function(obj,new_obj,parent_key,create_array){\n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else{\n    //Add the nested_delimiter to the parent key if the delimiter isn't already at the end\n    teal.nested_delimiter_regex = teal.nested_delimiter_regex || new RegExp(&quot;[&quot;+teal.nested_delimiter+&quot;]$&quot;);\n    if(!parent_key.match(teal.nested_delimiter_regex)){\n      parent_key += &quot;&quot;+teal.nested_delimiter;\n    }\n  }\n  Object.keys(obj).forEach(function(key){\n    var nested_key_name = parent_key+key;\n    //Format the new key name and take out any whitespace\n    var new_key_name = teal.getKeyName((teal.prefix+parent_key+key).replace(/\\s/g, ''));\n    //Set the key_type to limit the number of typeof checks\n    var key_type = teal.typeOf(obj[key]);\n    if(key_type !== 'undefined' &amp;&amp; key_type != null){\n      if(key_type.match(/boolean|string|number|date/) &amp;&amp; !teal.ignoreKey(key)){\n        //If obj[key] is a date, convert to ISOString\n        if(teal.typeOf(obj[key]) === 'date'){\n          obj[key] = obj[key].toISOString();\n        }\n        //Check to see if we need to create an array for this data point\n        if(create_array){\n          //First check to see if this key exists\n          if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n            //Make the key an array                       \n            new_obj[new_key_name] = [];\n          }\n          new_obj[new_key_name].push(&quot;&quot;+obj[key]); //Force value to be a string\n        }else{\n          //If the value of the key is a boolean or a string or a number and \n          //the key shouldn't be ignored add to the data layer\n          new_obj[new_key_name] = &quot;&quot;+obj[key]; //Force value to be a string\n        }\n      }else if(key_type === 'object' &amp;&amp; !teal.ignoreKey(key)){\n        //Process this piece of the data layer and merge it\n        teal.processDataObject(obj[key],new_obj,nested_key_name,create_array);\n      }else if(key_type === 'array'){\n        teal.processDataArray(obj[key],new_obj,nested_key_name);\n      }\n    }\n  });\n}\n\nteal.processDataArray = function(obj,new_obj,parent_key){\n  var objLength = obj.length; \n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else if(objLength &gt; 0 &amp;&amp; teal.typeOf(obj[0]).match(/boolean|string|number|date/)){\n    //This is a normal array that doesn't need a nested delimiter\n  }else{\n    //Add the nested_delimiter to the parent key\n    parent_key += &quot;&quot;+teal.nested_delimiter;\n  }\n  //Format the new key name and take out any whitespace\n  var new_key_name = teal.getKeyName((teal.prefix+parent_key).replace(/\\s/g, ''));\n  for(var n = 0; n &lt; objLength; n++){\n    var key_type = teal.typeOf(obj[n]);\n    if(key_type.match(/boolean|string|number|date/)){\n      //If obj[n] is a date, convert to ISOString\n      if(key_type === 'date'){\n        obj[n] = obj[n].toISOString();\n      }\n      //First check to see if this key exists\n      if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n        //Make the key an array                       \n        new_obj[new_key_name] = [];\n      }\n      //If the value of the key is a boolean or a string or a number and \n      //the key shouldn't be ignored add to the data layer                        \n      new_obj[new_key_name].push(&quot;&quot;+obj[n]);\n    }else if(key_type === 'object'){\n      teal.processDataObject(obj[n],new_obj,new_key_name,1);\n    }\n  }\n}\n\nteal.typeOf = function(e){return ({}).toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();}\n\nteal.flattenObject = function(obj,new_obj){\n  //Make sure object exists\n  if(typeof obj === 'undefined'){\n    return false;\n  }\n  //Check to see if we want to flatten the same object and keep the reference\n  var mergeObject = false;\n  if(obj === new_obj){\n    mergeObject = true;\n    //Start off a clean copy of the object\n    new_obj = {};\n  }\n  //Make sure new object exists\n  if(typeof new_obj === 'undefined'){\n    new_obj = {};\n  }\n  //Check to see if this object is an array\n  if(teal.typeOf(obj) === 'array'){\n    //Store a safe copy of this object in case we are processing the b object\n    var temp_array = JSON.parse(JSON.stringify(obj));\n    var temp_array_length = temp_array.length;\n    //Clean up the object\n    obj = {};\n    //Let's see if the obj and new_obj are the same.  If so, going to assume we are using the b object\n    if(obj == new_obj){\n      //Let's ensure that we have the a object\n      if(typeof a === 'undefined'){\n        var a = 'view';\n      }\n      //Add the automatic utag data points\n      utag.loader.RD(new_obj,a);\n    }\n    for(var i = 0; i &lt; temp_array_length; i++){\n        teal.processDataObject(temp_array[i],new_obj);\n    }\n  }else{\n    teal.processDataObject(obj,new_obj);\n  }\n  if(mergeObject){\n    //Need to delete everything out of obj and replace with new_obj\n    Object.keys(obj).forEach(function(key){\n      delete obj[key];\n    });\n    //Now that we have a clean original object, add everything from new_obj which allows the reference to be kept\n    Object.keys(new_obj).forEach(function(key){\n      obj[key] = new_obj[key];\n    });\n  }\n\n  return new_obj;\n}","promotedBy":"caleb.jaquith@tealium.com","promotedTimestamp":"201910101225","promotedDraftName":"Draft 1"},"6754af9632a2745e85c293e5aac0863370d9bd3330b9938c00cadfd215227d77":{"name":"prod","code":"// Flattener, pulled from https://tags.tiqcdn.com/utag/tealium-solutions/main/prod/utag.9.js as instructed by\n// https://community.tealiumiq.com/t5/iQ-Tag-Management/Data-Layer-Converter/ta-p/17581#toc-hId-1329378795\n\n//Define the teal global namespace\nwindow.teal = window.teal || {};\nteal.ignore_keys = {};\nteal.replace_keys = {};\nteal.prefix = &quot;&quot;;\n\n//In cases of a nested object, what should join the parent key and child key\nteal.nested_delimiter = &quot;.&quot;;\n\n//Ignore keys in the data layer that start with the following text.\n//Expecting an object of strings\n/*\nteal.ignore_keys = {\n  &quot;user&quot; : 1,\n  &quot;util&quot; : 1\n};\n*/\n\n//Specify a prefix for data layer elements being sent to the utag_data object.\n//Instead of utag_data.productID, it could be utag_data.dl_productID\n// teal.prefix = &quot;dl_&quot;;\n\n//Keys to be removed from the new flattened key name\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pi.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;pi&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.pageName\n/* teal.replace_keys = {\n    &quot;page&quot;:&quot;&quot;,\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n/*****************DO NOT MODIFY BELOW***********************/\n\nteal.flattener_version = 1.4;\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n// Add the Object.keys method for older versions of IE\nObject.keys||(Object.keys=function(){&quot;use strict&quot;;var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable(&quot;toString&quot;),c=[&quot;toString&quot;,&quot;toLocaleString&quot;,&quot;valueOf&quot;,&quot;hasOwnProperty&quot;,&quot;isPrototypeOf&quot;,&quot;propertyIsEnumerable&quot;,&quot;constructor&quot;],d=c.length;return function(e){if(&quot;object&quot;!=typeof e&amp;&amp;(&quot;function&quot;!=typeof e||null===e))throw new TypeError(&quot;Object.keys called on non-object&quot;);var g,h,f=[];for(g in e)a.call(e,g)&amp;&amp;f.push(g);if(b)for(h=0;h&lt;d;h++)a.call(e,c[h])&amp;&amp;f.push(c[h]);return f}}());\n\nteal.ignoreKey = function(key,re){\n  var should_ignore_key = 0;\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.ignore_keys_list === 'undefined'){\n    teal.ignore_keys_list = Object.keys(teal.ignore_keys);\n    teal.ignore_keys_list.forEach(function(name){\n      //Store a copy of the regex in the object\n      teal.ignore_keys[name] = new RegExp(&quot;^&quot;+name);\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }else{\n    //Loop through the ignore_keys object to see if we should ignore this key\n    teal.ignore_keys_list.forEach(function(name){\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }\n  return should_ignore_key;\n}\n\nteal.getKeyName = function(key,re){\n  //Create a new object to store regexs or use existing one\n  teal.replace_keys_regex = teal.replace_keys_regex || {};\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.replace_keys_list === 'undefined'){\n    teal.replace_keys_list = Object.keys(teal.replace_keys);\n    //Make a start of string and end of string regex\n    teal.replace_keys_regex.startOfString = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n    teal.replace_keys_regex.endOfString = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n    teal.replace_keys_list.forEach(function(name){\n      //Store a copy of the regex in the teal.replace_keys_regex object so that the regexs are only built once\n      teal.replace_keys_regex[name] = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]?&quot; + name + &quot;[&quot; + teal.nested_delimiter + &quot;]?&quot;, &quot;g&quot;);\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }else{\n    //Loop through the replace_keys object to see what we should be replacing\n    teal.replace_keys_list.forEach(function(name){\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }\n  return key;\n}\n\nteal.keyReplace = function(key,name,re){\n  //Check to see if we are replacing the key name with a new value or if we are removing the key altogether\n  if(teal.replace_keys[name] === ''){\n    //The key needs to be removed completely\n    key = key.replace(re,teal.nested_delimiter);\n    //Check to see if the key starts with the nested delimiter and if so, remove it\n    if(key.indexOf(teal.nested_delimiter) === 0){\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }else{\n    //Make a copy of the original key to see how we need to update the key name\n    var origKey = key;\n    //Replace the key name\n    key = key.replace(re,teal.nested_delimiter + teal.replace_keys[name] + teal.nested_delimiter);\n    //Check for the start of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.startOfString)){\n      //Remove the nested delimiter from the start of the string\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n    //Check for the end of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.endOfString)){\n      //Add the nested delimiter to the end of the string\n      var cleanRegEx = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }\n  return key;\n}\n\nteal.processDataObject = function(obj,new_obj,parent_key,create_array){\n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else{\n    //Add the nested_delimiter to the parent key if the delimiter isn't already at the end\n    teal.nested_delimiter_regex = teal.nested_delimiter_regex || new RegExp(&quot;[&quot;+teal.nested_delimiter+&quot;]$&quot;);\n    if(!parent_key.match(teal.nested_delimiter_regex)){\n      parent_key += &quot;&quot;+teal.nested_delimiter;\n    }\n  }\n  Object.keys(obj).forEach(function(key){\n    var nested_key_name = parent_key+key;\n    //Format the new key name and take out any whitespace\n    var new_key_name = teal.getKeyName((teal.prefix+parent_key+key).replace(/\\s/g, ''));\n    //Set the key_type to limit the number of typeof checks\n    var key_type = teal.typeOf(obj[key]);\n    if(key_type !== 'undefined' &amp;&amp; key_type != null){\n      if(key_type.match(/boolean|string|number|date/) &amp;&amp; !teal.ignoreKey(key)){\n        //If obj[key] is a date, convert to ISOString\n        if(teal.typeOf(obj[key]) === 'date'){\n          obj[key] = obj[key].toISOString();\n        }\n        //Check to see if we need to create an array for this data point\n        if(create_array){\n          //First check to see if this key exists\n          if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n            //Make the key an array                       \n            new_obj[new_key_name] = [];\n          }\n          new_obj[new_key_name].push(&quot;&quot;+obj[key]); //Force value to be a string\n        }else{\n          //If the value of the key is a boolean or a string or a number and \n          //the key shouldn't be ignored add to the data layer\n          new_obj[new_key_name] = &quot;&quot;+obj[key]; //Force value to be a string\n        }\n      }else if(key_type === 'object' &amp;&amp; !teal.ignoreKey(key)){\n        //Process this piece of the data layer and merge it\n        teal.processDataObject(obj[key],new_obj,nested_key_name,create_array);\n      }else if(key_type === 'array'){\n        teal.processDataArray(obj[key],new_obj,nested_key_name);\n      }\n    }\n  });\n}\n\nteal.processDataArray = function(obj,new_obj,parent_key){\n  var objLength = obj.length; \n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else if(objLength &gt; 0 &amp;&amp; teal.typeOf(obj[0]).match(/boolean|string|number|date/)){\n    //This is a normal array that doesn't need a nested delimiter\n  }else{\n    //Add the nested_delimiter to the parent key\n    parent_key += &quot;&quot;+teal.nested_delimiter;\n  }\n  //Format the new key name and take out any whitespace\n  var new_key_name = teal.getKeyName((teal.prefix+parent_key).replace(/\\s/g, ''));\n  for(var n = 0; n &lt; objLength; n++){\n    var key_type = teal.typeOf(obj[n]);\n    if(key_type.match(/boolean|string|number|date/)){\n      //If obj[n] is a date, convert to ISOString\n      if(key_type === 'date'){\n        obj[n] = obj[n].toISOString();\n      }\n      //First check to see if this key exists\n      if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n        //Make the key an array                       \n        new_obj[new_key_name] = [];\n      }\n      //If the value of the key is a boolean or a string or a number and \n      //the key shouldn't be ignored add to the data layer                        \n      new_obj[new_key_name].push(&quot;&quot;+obj[n]);\n    }else if(key_type === 'object'){\n      teal.processDataObject(obj[n],new_obj,new_key_name,1);\n    }\n  }\n}\n\nteal.typeOf = function(e){return ({}).toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();}\n\nteal.flattenObject = function(obj,new_obj){\n  //Make sure object exists\n  if(typeof obj === 'undefined'){\n    return false;\n  }\n  //Check to see if we want to flatten the same object and keep the reference\n  var mergeObject = false;\n  if(obj === new_obj){\n    mergeObject = true;\n    //Start off a clean copy of the object\n    new_obj = {};\n  }\n  //Make sure new object exists\n  if(typeof new_obj === 'undefined'){\n    new_obj = {};\n  }\n  //Check to see if this object is an array\n  if(teal.typeOf(obj) === 'array'){\n    //Store a safe copy of this object in case we are processing the b object\n    var temp_array = JSON.parse(JSON.stringify(obj));\n    var temp_array_length = temp_array.length;\n    //Clean up the object\n    obj = {};\n    //Let's see if the obj and new_obj are the same.  If so, going to assume we are using the b object\n    if(obj == new_obj){\n      //Let's ensure that we have the a object\n      if(typeof a === 'undefined'){\n        var a = 'view';\n      }\n      //Add the automatic utag data points\n      utag.loader.RD(new_obj,a);\n    }\n    for(var i = 0; i &lt; temp_array_length; i++){\n        teal.processDataObject(temp_array[i],new_obj);\n    }\n  }else{\n    teal.processDataObject(obj,new_obj);\n  }\n  if(mergeObject){\n    //Need to delete everything out of obj and replace with new_obj\n    Object.keys(obj).forEach(function(key){\n      delete obj[key];\n    });\n    //Now that we have a clean original object, add everything from new_obj which allows the reference to be kept\n    Object.keys(new_obj).forEach(function(key){\n      obj[key] = new_obj[key];\n    });\n  }\n\n  return new_obj;\n}","promotedBy":"caleb.jaquith@tealium.com","promotedDraftName":"Draft 1","promotedTimestamp":"201906211317"},"3f3ef786b34d6dd716e1812c8b74a7a0e1f05aa5f3230588f6f5bcd00c6c8392":{"name":"qa","code":"// Flattener, pulled from https://tags.tiqcdn.com/utag/tealium-solutions/main/prod/utag.9.js as instructed by\n// https://community.tealiumiq.com/t5/iQ-Tag-Management/Data-Layer-Converter/ta-p/17581#toc-hId-1329378795\n\n//Define the teal global namespace\nwindow.teal = window.teal || {};\nteal.ignore_keys = {};\nteal.replace_keys = {};\nteal.prefix = &quot;&quot;;\n\n//In cases of a nested object, what should join the parent key and child key\nteal.nested_delimiter = &quot;.&quot;;\n\n//Ignore keys in the data layer that start with the following text.\n//Expecting an object of strings\n/*\nteal.ignore_keys = {\n  &quot;user&quot; : 1,\n  &quot;util&quot; : 1\n};\n*/\n\n//Specify a prefix for data layer elements being sent to the utag_data object.\n//Instead of utag_data.productID, it could be utag_data.dl_productID\n// teal.prefix = &quot;dl_&quot;;\n\n//Keys to be removed from the new flattened key name\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pi.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;pi&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.page.pageName\n/* teal.replace_keys = {\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n//For a flattened key, you have digitalData.page.pageInfo.pageName and you want digitalData.pageName\n/* teal.replace_keys = {\n    &quot;page&quot;:&quot;&quot;,\n    &quot;pageInfo&quot;:&quot;&quot;\n  };\n*/\n\n/*****************DO NOT MODIFY BELOW***********************/\n\nteal.flattener_version = 1.4;\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n// Add the Object.keys method for older versions of IE\nObject.keys||(Object.keys=function(){&quot;use strict&quot;;var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable(&quot;toString&quot;),c=[&quot;toString&quot;,&quot;toLocaleString&quot;,&quot;valueOf&quot;,&quot;hasOwnProperty&quot;,&quot;isPrototypeOf&quot;,&quot;propertyIsEnumerable&quot;,&quot;constructor&quot;],d=c.length;return function(e){if(&quot;object&quot;!=typeof e&amp;&amp;(&quot;function&quot;!=typeof e||null===e))throw new TypeError(&quot;Object.keys called on non-object&quot;);var g,h,f=[];for(g in e)a.call(e,g)&amp;&amp;f.push(g);if(b)for(h=0;h&lt;d;h++)a.call(e,c[h])&amp;&amp;f.push(c[h]);return f}}());\n\nteal.ignoreKey = function(key,re){\n  var should_ignore_key = 0;\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.ignore_keys_list === 'undefined'){\n    teal.ignore_keys_list = Object.keys(teal.ignore_keys);\n    teal.ignore_keys_list.forEach(function(name){\n      //Store a copy of the regex in the object\n      teal.ignore_keys[name] = new RegExp(&quot;^&quot;+name);\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }else{\n    //Loop through the ignore_keys object to see if we should ignore this key\n    teal.ignore_keys_list.forEach(function(name){\n      if(key.match(teal.ignore_keys[name])){\n        should_ignore_key = 1;\n      }\n    });\n  }\n  return should_ignore_key;\n}\n\nteal.getKeyName = function(key,re){\n  //Create a new object to store regexs or use existing one\n  teal.replace_keys_regex = teal.replace_keys_regex || {};\n  //Build a new array to avoid running through Object.keys multiple times\n  if(typeof teal.replace_keys_list === 'undefined'){\n    teal.replace_keys_list = Object.keys(teal.replace_keys);\n    //Make a start of string and end of string regex\n    teal.replace_keys_regex.startOfString = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n    teal.replace_keys_regex.endOfString = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n    teal.replace_keys_list.forEach(function(name){\n      //Store a copy of the regex in the teal.replace_keys_regex object so that the regexs are only built once\n      teal.replace_keys_regex[name] = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]?&quot; + name + &quot;[&quot; + teal.nested_delimiter + &quot;]?&quot;, &quot;g&quot;);\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }else{\n    //Loop through the replace_keys object to see what we should be replacing\n    teal.replace_keys_list.forEach(function(name){\n      key = teal.keyReplace(key,name,teal.replace_keys_regex[name]);\n    });\n  }\n  return key;\n}\n\nteal.keyReplace = function(key,name,re){\n  //Check to see if we are replacing the key name with a new value or if we are removing the key altogether\n  if(teal.replace_keys[name] === ''){\n    //The key needs to be removed completely\n    key = key.replace(re,teal.nested_delimiter);\n    //Check to see if the key starts with the nested delimiter and if so, remove it\n    if(key.indexOf(teal.nested_delimiter) === 0){\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }else{\n    //Make a copy of the original key to see how we need to update the key name\n    var origKey = key;\n    //Replace the key name\n    key = key.replace(re,teal.nested_delimiter + teal.replace_keys[name] + teal.nested_delimiter);\n    //Check for the start of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.startOfString)){\n      //Remove the nested delimiter from the start of the string\n      var cleanRegEx = new RegExp(&quot;^[&quot; + teal.nested_delimiter + &quot;]&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n    //Check for the end of the origKey to see of the nested delimiter is there\n    if(!origKey.match(teal.replace_keys_regex.endOfString)){\n      //Add the nested delimiter to the end of the string\n      var cleanRegEx = new RegExp(&quot;[&quot; + teal.nested_delimiter + &quot;]$&quot;);\n      key = key.replace(cleanRegEx,'');\n    }\n  }\n  return key;\n}\n\nteal.processDataObject = function(obj,new_obj,parent_key,create_array){\n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else{\n    //Add the nested_delimiter to the parent key if the delimiter isn't already at the end\n    teal.nested_delimiter_regex = teal.nested_delimiter_regex || new RegExp(&quot;[&quot;+teal.nested_delimiter+&quot;]$&quot;);\n    if(!parent_key.match(teal.nested_delimiter_regex)){\n      parent_key += &quot;&quot;+teal.nested_delimiter;\n    }\n  }\n  Object.keys(obj).forEach(function(key){\n    var nested_key_name = parent_key+key;\n    //Format the new key name and take out any whitespace\n    var new_key_name = teal.getKeyName((teal.prefix+parent_key+key).replace(/\\s/g, ''));\n    //Set the key_type to limit the number of typeof checks\n    var key_type = teal.typeOf(obj[key]);\n    if(key_type !== 'undefined' &amp;&amp; key_type != null){\n      if(key_type.match(/boolean|string|number|date/) &amp;&amp; !teal.ignoreKey(key)){\n        //If obj[key] is a date, convert to ISOString\n        if(teal.typeOf(obj[key]) === 'date'){\n          obj[key] = obj[key].toISOString();\n        }\n        //Check to see if we need to create an array for this data point\n        if(create_array){\n          //First check to see if this key exists\n          if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n            //Make the key an array                       \n            new_obj[new_key_name] = [];\n          }\n          new_obj[new_key_name].push(&quot;&quot;+obj[key]); //Force value to be a string\n        }else{\n          //If the value of the key is a boolean or a string or a number and \n          //the key shouldn't be ignored add to the data layer\n          new_obj[new_key_name] = &quot;&quot;+obj[key]; //Force value to be a string\n        }\n      }else if(key_type === 'object' &amp;&amp; !teal.ignoreKey(key)){\n        //Process this piece of the data layer and merge it\n        teal.processDataObject(obj[key],new_obj,nested_key_name,create_array);\n      }else if(key_type === 'array'){\n        teal.processDataArray(obj[key],new_obj,nested_key_name);\n      }\n    }\n  });\n}\n\nteal.processDataArray = function(obj,new_obj,parent_key){\n  var objLength = obj.length; \n  if(typeof parent_key === &quot;undefined&quot;){\n    //This object isn't nested in another object\n    parent_key = &quot;&quot;;\n  }else if(objLength &gt; 0 &amp;&amp; teal.typeOf(obj[0]).match(/boolean|string|number|date/)){\n    //This is a normal array that doesn't need a nested delimiter\n  }else{\n    //Add the nested_delimiter to the parent key\n    parent_key += &quot;&quot;+teal.nested_delimiter;\n  }\n  //Format the new key name and take out any whitespace\n  var new_key_name = teal.getKeyName((teal.prefix+parent_key).replace(/\\s/g, ''));\n  for(var n = 0; n &lt; objLength; n++){\n    var key_type = teal.typeOf(obj[n]);\n    if(key_type.match(/boolean|string|number|date/)){\n      //If obj[n] is a date, convert to ISOString\n      if(key_type === 'date'){\n        obj[n] = obj[n].toISOString();\n      }\n      //First check to see if this key exists\n      if(teal.typeOf(new_obj[new_key_name]) !== &quot;array&quot;){\n        //Make the key an array                       \n        new_obj[new_key_name] = [];\n      }\n      //If the value of the key is a boolean or a string or a number and \n      //the key shouldn't be ignored add to the data layer                        \n      new_obj[new_key_name].push(&quot;&quot;+obj[n]);\n    }else if(key_type === 'object'){\n      teal.processDataObject(obj[n],new_obj,new_key_name,1);\n    }\n  }\n}\n\nteal.typeOf = function(e){return ({}).toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();}\n\nteal.flattenObject = function(obj,new_obj){\n  //Make sure object exists\n  if(typeof obj === 'undefined'){\n    return false;\n  }\n  //Check to see if we want to flatten the same object and keep the reference\n  var mergeObject = false;\n  if(obj === new_obj){\n    mergeObject = true;\n    //Start off a clean copy of the object\n    new_obj = {};\n  }\n  //Make sure new object exists\n  if(typeof new_obj === 'undefined'){\n    new_obj = {};\n  }\n  //Check to see if this object is an array\n  if(teal.typeOf(obj) === 'array'){\n    //Store a safe copy of this object in case we are processing the b object\n    var temp_array = JSON.parse(JSON.stringify(obj));\n    var temp_array_length = temp_array.length;\n    //Clean up the object\n    obj = {};\n    //Let's see if the obj and new_obj are the same.  If so, going to assume we are using the b object\n    if(obj == new_obj){\n      //Let's ensure that we have the a object\n      if(typeof a === 'undefined'){\n        var a = 'view';\n      }\n      //Add the automatic utag data points\n      utag.loader.RD(new_obj,a);\n    }\n    for(var i = 0; i &lt; temp_array_length; i++){\n        teal.processDataObject(temp_array[i],new_obj);\n    }\n  }else{\n    teal.processDataObject(obj,new_obj);\n  }\n  if(mergeObject){\n    //Need to delete everything out of obj and replace with new_obj\n    Object.keys(obj).forEach(function(key){\n      delete obj[key];\n    });\n    //Now that we have a clean original object, add everything from new_obj which allows the reference to be kept\n    Object.keys(new_obj).forEach(function(key){\n      obj[key] = new_obj[key];\n    });\n  }\n\n  return new_obj;\n}","promotedBy":"caleb.jaquith@tealium.com","promotedTimestamp":"201906211317","promotedDraftName":"Draft 1"}},"draftSeq":"1"},"labels":"","initialize":"","status":"active","constructor":"","scope":"domready","advExecOption":"alr","type":"new","blockPubTargetsLogic":"true","publishedTargets":"dev","notes":"","sort":"2","selectedTargets":{"dev":"true","prod":"true","qa":"true"},"_id":"8","extType":"Javascript Code"}},"datacloudLinkedProfiles":"{&quot;main&quot;:{&quot;rev&quot;:&quot;1578646843063&quot;,&quot;env&quot;:&quot;AudienceStream&quot;}}","email":"caleb.jaquith@tealium.com","title":"Version - 2020/02/11 09:21","define":{"138":{"_id":"138","labels":"","type":"cp","name":"utag_main_tealium_test_session","description":"","title":""},"139":{"_id":"139","description":"Should be 'true' or 'false'","title":"","labels":"","type":"qp","name":"tealium_test"},"140":{"_id":"140","name":"utagdb","labels":"","type":"cp","title":"","description":""},"141":{"name":"page_type","labels":"","type":"js","title":"","description":"","_id":"141"},"220":{"_id":"220","name":"Account Value Strings","type":"va","description":"Should contain account numbers and their value band","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5217","origin_name":"Account Value Strings","origin_type":"property_lists","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"221":{"_id":"221","name":"Active browser type","type":"va","description":"The browser actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"44","origin_name":"Active browser type","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"222":{"_id":"222","name":"Active browser version","type":"va","description":"The browser version actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"48","origin_name":"Active browser version","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"223":{"_id":"223","name":"Active device","type":"va","description":"The device actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"46","origin_name":"Active device","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"224":{"_id":"224","name":"Active operating system","type":"va","description":"The operating system actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"45","origin_name":"Active operating system","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"225":{"_id":"225","name":"Active platform","type":"va","description":"The platform actively being used by the visitor","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"47","origin_name":"Active platform","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"226":{"_id":"226","name":"Average visit duration in minutes","type":"va","description":"Average visit duration in minutes","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"26","origin_name":"Average visit duration in minutes","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"227":{"_id":"227","name":"Average visits per week","type":"va","description":"Average visits per week","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"29","origin_name":"Average visits per week","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"228":{"_id":"228","name":"Batch Tester","type":"va","description":"Testing the batch webhook","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5189","origin_name":"Batch Tester","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"229":{"_id":"229","name":"Blue","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5067","origin_name":"Blue","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"230":{"_id":"230","name":"Brown","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5055","origin_name":"Brown","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"231":{"_id":"231","name":"Cookie Sync ID - Assigned Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5075","origin_name":"Cookie Sync ID - Assigned Rule","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"232":{"_id":"232","name":"Cookie Sync ID - No Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5079","origin_name":"Cookie Sync ID - No Rule","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"233":{"_id":"233","name":"Counter (Last Seen)","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5193","origin_name":"Counter (Last Seen)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"234":{"_id":"234","name":"Direct visit","type":"va","description":"The user navigated directly to the site","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"14","origin_name":"Direct visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"235":{"_id":"235","name":"Entry URL","type":"va","description":"URL of the first page visited","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5","origin_name":"Entry URL","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"236":{"_id":"236","name":"Event count","type":"va","description":"Total number of events in visit","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"7","origin_name":"Event count","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"237":{"_id":"237","name":"Exit URL","type":"va","description":"URL of the last page visited","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"6","origin_name":"Exit URL","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"238":{"_id":"238","name":"Fan","type":"va","description":"More than two total visits and more direct visits than refers","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"30","origin_name":"Fan","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"239":{"_id":"239","name":"First 'test_value' only","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5183","origin_name":"First 'test_value' only","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"240":{"_id":"240","name":"First visit","type":"va","description":"Date of first visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"23","origin_name":"First visit","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"241":{"_id":"241","name":"Frequent visitor","type":"va","description":"Two or more average visits per week","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"31","origin_name":"Frequent visitor","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"242":{"_id":"242","name":"Full entry URL (with attribution)","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5090","origin_name":"Full entry URL (with attribution)","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"243":{"_id":"243","name":"Google GID","type":"va","description":"From the Google Cookie Match, saved here as string ","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5038","origin_name":"Google GID","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"244":{"_id":"244","name":"Green","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5063","origin_name":"Green","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"245":{"_id":"245","name":"GUID - Compromised Profile","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5179","origin_name":"GUID - Compromised Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"246":{"_id":"246","name":"GUID - Compromised profile and a new visit [bln]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5340","origin_name":"GUID - Compromised profile and a new visit [bln]","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"247":{"_id":"247","name":"GUID - Count Has Changed This Visit","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5332","origin_name":"GUID - Count Has Changed This Visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"248":{"_id":"248","name":"GUID - Count of seen [num]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5175","origin_name":"GUID - Count of seen [num]","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"249":{"_id":"249","name":"GUID - Healthy Profile","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5177","origin_name":"GUID - Healthy Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"250":{"_id":"250","name":"GUID - Incomplete Profile","type":"va","description":"Should not use this profile, it's been used on a shared device and only contains partial information","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5334","origin_name":"GUID - Incomplete Profile","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"251":{"_id":"251","name":"GUID - Last seen [str]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5169","origin_name":"GUID - Last seen [str]","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"252":{"_id":"252","name":"GUID - None","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5181","origin_name":"GUID - None","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"253":{"_id":"253","name":"Has Cookie Sync ID - With Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5077","origin_name":"Has Cookie Sync ID - With Rule","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"254":{"_id":"254","name":"Has Cookie Sync ID - Without Rule","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5081","origin_name":"Has Cookie Sync ID - Without Rule","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"255":{"_id":"255","name":"Hyphen Lover","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5088","origin_name":"Hyphen Lover","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"256":{"_id":"256","name":"Import - Age","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5165","origin_name":"Import - Age","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"257":{"_id":"257","name":"Import - Alpha","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5161","origin_name":"Import - Alpha","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"258":{"_id":"258","name":"Import - Bool","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5167","origin_name":"Import - Bool","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"259":{"_id":"259","name":"Import - Row Number","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5163","origin_name":"Import - Row Number","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"260":{"_id":"260","name":"Last 'test_value'","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5187","origin_name":"Last 'test_value'","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"261":{"_id":"261","name":"Last conversion partner name","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5034","origin_name":"Last conversion partner name","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"262":{"_id":"262","name":"Last event time","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5318","origin_name":"Last event time","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"263":{"_id":"263","name":"Last event URL","type":"va","description":"Last event URL for visitor","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"17","origin_name":"Last event URL","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"264":{"_id":"264","name":"Last UDO String","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5145","origin_name":"Last UDO String","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"265":{"_id":"265","name":"Last visit","type":"va","description":"Date of last visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"24","origin_name":"Last visit","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"266":{"_id":"266","name":"Last-seen tealium_event [str]","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5324","origin_name":"Last-seen tealium_event [str]","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"267":{"_id":"267","name":"Last-seen Trace Id","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5320","origin_name":"Last-seen Trace Id","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"268":{"_id":"268","name":"Lifetime browser types used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime browser types used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"56","origin_name":"Lifetime browser types used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"269":{"_id":"269","name":"Lifetime browser versions used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime browser versions used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"62","origin_name":"Lifetime browser versions used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"270":{"_id":"270","name":"Lifetime devices used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime devices used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"54","origin_name":"Lifetime devices used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"271":{"_id":"271","name":"Lifetime event count","type":"va","description":"Total number of events triggered by user","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"22","origin_name":"Lifetime event count","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"272":{"_id":"272","name":"Lifetime operating systems used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime operating systems used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"58","origin_name":"Lifetime operating systems used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"273":{"_id":"273","name":"Lifetime order total","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5028","origin_name":"Lifetime order total","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"274":{"_id":"274","name":"Lifetime order total by partner name (favorite)","type":"va","description":"Captures the favorite number for Tally: Lifetime order total by partner name","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5031","origin_name":"Lifetime order total by partner name (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"275":{"_id":"275","name":"Lifetime platforms used (favorite)","type":"va","description":"Captures the favorite metric for Metric Set: Lifetime platforms used","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"60","origin_name":"Lifetime platforms used (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"276":{"_id":"276","name":"LIfetime Test Stream Values (favorite)","type":"va","description":"Captures the favorite number for Tally: LIfetime Test Stream Values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5132","origin_name":"LIfetime Test Stream Values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"277":{"_id":"277","name":"Lifetime visit count","type":"va","description":"Total number of times user has visited site","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"21","origin_name":"Lifetime visit count","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"278":{"_id":"278","name":"Light Blue","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5065","origin_name":"Light Blue","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"279":{"_id":"279","name":"Most Recent GCLID","type":"va","description":"This setup ignores the edge case where a user could click two ads from this campaign within the same session - it will only send the last GCLID in those cases.","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5312","origin_name":"Most Recent GCLID","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"280":{"_id":"280","name":"Most Recent GCLID has changed this visit","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5314","origin_name":"Most Recent GCLID has changed this visit","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"281":{"_id":"281","name":"NO BOUNCERS HERE","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5322","origin_name":"NO BOUNCERS HERE","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"282":{"_id":"282","name":"Optin (imported)","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5149","origin_name":"Optin (imported)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"283":{"_id":"283","name":"Orange","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5059","origin_name":"Orange","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"284":{"_id":"284","name":"Pink","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5069","origin_name":"Pink","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"285":{"_id":"285","name":"Product Prices Purchases - Last Order Imported (favorite)","type":"va","description":"Captures the favorite number for Tally: Product Prices Purchases - Last Order Imported","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5120","origin_name":"Product Prices Purchases - Last Order Imported (favorite)","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"286":{"_id":"286","name":"Product Purchase Count (Lifetime) (favorite)","type":"va","description":"Captures the favorite number for Tally: Product Purchase Count (Lifetime)","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5118","origin_name":"Product Purchase Count (Lifetime) (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"287":{"_id":"287","name":"Red","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5057","origin_name":"Red","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"288":{"_id":"288","name":"Referred visit","type":"va","description":"The user was referred from another site","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"13","origin_name":"Referred visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"289":{"_id":"289","name":"Referrer","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5092","origin_name":"Referrer","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"290":{"_id":"290","name":"Returning visitor","type":"va","description":"Return visitor","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"27","origin_name":"Returning visitor","origin_type":"flags","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"291":{"_id":"291","name":"Spend per Product (Lifetime) (favorite)","type":"va","description":"Captures the favorite number for Tally: Spend per Product (Lifetime)","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5122","origin_name":"Spend per Product (Lifetime) (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"292":{"_id":"292","name":"Tealium Test Visit","type":"va","description":"Set via query parameter &quot;tealium_test_visit=true&quot;","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"5125","origin_name":"Tealium Test Visit","origin_type":"flags","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"293":{"_id":"293","name":"Tealium Visitor ID (Last Seen)","type":"va","description":"3rd party wins if present","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5129","origin_name":"Tealium Visitor ID (Last Seen)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"294":{"_id":"294","name":"tealium_cf_visit_ttl","type":"va","description":"","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"82","origin_name":"tealium_cf_visit_ttl","origin_type":"properties","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"295":{"_id":"295","name":"Test Date","type":"va","description":"Expects format 2020-08-27T13:13:47.395Z ","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5195","origin_name":"Test Date","origin_type":"dates","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"296":{"_id":"296","name":"Test Tally (favorite)","type":"va","description":"Captures the favorite number for Tally: Test Tally","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5093","origin_name":"Test Tally (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"297":{"_id":"297","name":"test_tiq_string values (favorite)","type":"va","description":"Captures the favorite number for Tally: test_tiq_string values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5136","origin_name":"test_tiq_string values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"298":{"_id":"298","name":"test_udo_string values (favorite)","type":"va","description":"Captures the favorite number for Tally: test_udo_string values","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5138","origin_name":"test_udo_string values (favorite)","origin_type":"properties","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"299":{"_id":"299","name":"Tester","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5141","origin_name":"Tester","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"300":{"_id":"300","name":"Total direct visits","type":"va","description":"Total direct visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"15","origin_name":"Total direct visits","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"301":{"_id":"301","name":"Total referred visits","type":"va","description":"Total referred visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"16","origin_name":"Total referred visits","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"302":{"_id":"302","name":"Total time spent on site in minutes","type":"va","description":"Sum duration of all user visits","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"25","origin_name":"Total time spent on site in minutes","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"303":{"_id":"303","name":"Unbadged","type":"va","description":"The visitor has not been assigned any badges","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"32","origin_name":"Unbadged","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"304":{"_id":"304","name":"Visit duration","type":"va","description":"Visit duration in minutes","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"12","origin_name":"Visit duration","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"305":{"_id":"305","name":"Visit end","type":"va","description":"Visit end date","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"11","origin_name":"Visit end","origin_type":"dates","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"306":{"_id":"306","name":"Visit start","type":"va","description":"Visit start date","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"10","origin_name":"Visit start","origin_type":"dates","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"307":{"_id":"307","name":"Weeks since first visit","type":"va","description":"Weeks elapsed since first visit","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"28","origin_name":"Weeks since first visit","origin_type":"metrics","origin_context":"visitor","account":"services-caleb","profileid":"main"}},"308":{"_id":"308","name":"Weeks since first visit temp","type":"va","description":"Temporary store for computer value","context":"current_visit","imported":"AudienceStream","settings":{"origin_id":"80","origin_name":"Weeks since first visit temp","origin_type":"metrics","origin_context":"current_visit","account":"services-caleb","profileid":"main"}},"309":{"_id":"309","name":"Yellow","type":"va","description":"","context":"visitor","imported":"AudienceStream","settings":{"origin_id":"5061","origin_name":"Yellow","origin_type":"badges","origin_context":"visitor","account":"services-caleb","profileid":"main"}}},"settings":{"library":"NONE","minorrevision":"202002110922","lastmanageid":"0","lastloadruleid":"1","creation":"202002071159","revision":"202002110922","datacloud_profile":"main","account":"services-caleb","profileid":"datalayer-listener-demo","lastcustomizeid":"0","lastdefineid":"219","datacloud_revision":"1578646843063"},"versionorigin":"202002110919","createManifest":"false","publish_history":{"202002110922":{"size":"34","202002110922":{"action":"Published to dev","versionorigin":"202002110919","publishedConsent":"[ ]","notes":"Actually publish this time :|","publishedTags":"[ ]","operator":"caleb.jaquith@tealium.com","status":"prod,qa,dev","lastmanageid":"0","datacloudLinkedProfiles":"{&quot;main&quot;:{&quot;rev&quot;:&quot;1578646843063&quot;,&quot;env&quot;:&quot;AudienceStream&quot;}}","history":"[ { \"action\" : \"updated_extension\" , \"data\" : { \"id\" : \"3\" , \"name\" : \"GTM Listener (4/4) - Data Layer Listener Function\" , \"type\" : \"100040\" , \"kind\" : \"Extension\" , \"operation\" : \"updated\" , \"container\" : \"customizations_3\" , \"tab_name\" : \"customizations\"}}]","lastcustomizeid":"0","title":"Version - 2020/02/11 09:21","publishedExtensions":"[ \"2\" , \"3\" , \"4\" , \"8\"]","linkedProfiles":"{ }"},"status":"prod,qa,dev","title":"Version - 2020/02/11 09:21"},"202002071159":{"size":"34","202002071159":{"datacloudLinkedProfiles":"{}","lastcustomizeid":"","history":"","title":"Initial publish","linkedProfiles":"{ }","publishedExtensions":"[ \"2\" , \"3\" , \"4\" , \"8\"]","action":"Published to dev","versionorigin":"","publishedConsent":"","notes":"Initial publish on profile creation","publishedTags":"[ ]","operator":"caleb.jaquith@tealium.com","lastmanageid":"","status":"prod,qa,dev"},"status":"Not Published","title":"Initial publish"},"202002110919":{"title":"Version - 2020/02/11 09:19","status":"Not Published","size":"34","202002110919":{"publishedTags":"[ ]","operator":"caleb.jaquith@tealium.com","lastmanageid":"0","status":"prod,qa,dev","action":"Published to dev","versionorigin":"202002071202","publishedConsent":"[ ]","notes":"Improve logging slightly","linkedProfiles":"{ }","publishedExtensions":"[ \"2\" , \"3\" , \"4\" , \"8\"]","datacloudLinkedProfiles":"{&quot;main&quot;:{&quot;rev&quot;:&quot;1578646843063&quot;,&quot;env&quot;:&quot;AudienceStream&quot;}}","lastcustomizeid":"0","title":"Version - 2020/02/11 09:19","history":"[ { \"action\" : \"updated_extension\" , \"data\" : { \"id\" : \"3\" , \"name\" : \"GTM Listener (4/4) - Data Layer Listener Function\" , \"type\" : \"100040\" , \"kind\" : \"Extension\" , \"operation\" : \"updated\" , \"container\" : \"customizations_3\" , \"tab_name\" : \"customizations\"}}]"}},"202002071202":{"title":"Version 2020.02.07.1202","status":"Not Published","size":"34","202002071202":{"publishedExtensions":"[ \"2\" , \"3\" , \"4\" , \"8\"]","linkedProfiles":"{ }","title":"Version 2020.02.07.1202","lastcustomizeid":"0","history":"[ { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"23\" , \"name\" : \"QUICK DEMO: React to localStorage on pageload\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"28\" , \"name\" : \"QUICK DEMO: Turn products from the favorite brand yellow to highlight them\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"29\" , \"name\" : \"QUICK DEMO: Rebuilt with improvements\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"12\" , \"name\" : \"Opt Out (Profile)\" , \"type\" : \"100022\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"13\" , \"name\" : \"Do Not Track (Profile)\" , \"type\" : \"100034\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"21\" , \"name\" : \"Unit prefix (hardcoded for flaconi)\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"24\" , \"name\" : \"Collect Improvements\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}} , { \"action\" : \"removed_extension\" , \"data\" : { \"id\" : \"26\" , \"name\" : \"Add polling for demo\" , \"type\" : \"100036\" , \"library\" : \"\" , \"kind\" : \"Extension\" , \"operation\" : \"removed\" , \"tab_name\" : \"customizations\"}}]","datacloudLinkedProfiles":"{&quot;main&quot;:{&quot;rev&quot;:&quot;1578646843063&quot;,&quot;env&quot;:&quot;AudienceStream&quot;}}","status":"prod,qa,dev","lastmanageid":"","publishedTags":"[ ]","operator":"caleb.jaquith@tealium.com","versionorigin":"202002071159","notes":"Remove unrelated extensions (leftover from copy)","publishedConsent":"[ ]","action":"Published to dev"}}},"profile":"datalayer-listener-demo","label_relationships":null,"linkedProfiles":"{ }","profile_action_type":"SaveAs","history":"[ { \"action\" : \"updated_extension\" , \"data\" : { \"id\" : \"3\" , \"name\" : \"GTM Listener (4/4) - Data Layer Listener Function\" , \"type\" : \"100040\" , \"kind\" : \"Extension\" , \"operation\" : \"updated\" , \"container\" : \"customizations_3\" , \"tab_name\" : \"customizations\"}}]","lastcustomizeid":"0","account":"services-caleb","importable_library":"NONE","revision":"202002110919","test":{},"lastmanageid":"0","publish":{"smartFTP":{"prod":"preMCDN","dev":"preMCDN","qa":"preMCDN"},"minify":"yes","enable_utf8_encoding":"yes"},"datacloud_merge":"true","datacloud_profile_name":"main","datacloud_revision":"1625226277606","experiments":[{"id":"load_order_manager","enabled":false}]}
